[debug] Created tunnel using local port: '62678'

[debug] SERVER: "127.0.0.1:62678"

REVISION: 12
RELEASED: Tue Oct  1 12:31:08 2019
CHART: eclipse-hono-1.0.0-SNAPSHOT
USER-SUPPLIED VALUES:
adapters:
  amqp:
    svc:
      annotations:
        service.beta.kubernetes.io/azure-load-balancer-resource-group: hono
      loadBalancerIP: 40.118.0.228
  amqpMessagingNetworkSpec:
    host: kaishonons.servicebus.windows.net
    password: vPsBoMoJGNJEzKfZWRgLe8OdHfmhuCnwfIHigwQYi+o=
    username: RootManageSharedAccessKey
  commandAndControlSpec:
    host: kaishonons.servicebus.windows.net
    password: vPsBoMoJGNJEzKfZWRgLe8OdHfmhuCnwfIHigwQYi+o=
    username: RootManageSharedAccessKey
  credentialsSpec:
    host: kaishonons.servicebus.windows.net
    password: vPsBoMoJGNJEzKfZWRgLe8OdHfmhuCnwfIHigwQYi+o=
    username: RootManageSharedAccessKey
  deviceConnectionSpec:
    host: kaishonons.servicebus.windows.net
    password: vPsBoMoJGNJEzKfZWRgLe8OdHfmhuCnwfIHigwQYi+o=
    username: RootManageSharedAccessKey
  deviceRegistrationSpec:
    host: kaishonons.servicebus.windows.net
    password: vPsBoMoJGNJEzKfZWRgLe8OdHfmhuCnwfIHigwQYi+o=
    username: RootManageSharedAccessKey
  http:
    svc:
      annotations:
        service.beta.kubernetes.io/azure-load-balancer-resource-group: hono
      loadBalancerIP: 40.114.139.147
  mqtt:
    svc:
      annotations:
        service.beta.kubernetes.io/azure-load-balancer-resource-group: hono
      loadBalancerIP: 40.114.223.12
  tenantSpec:
    host: kaishonons.servicebus.windows.net
    password: vPsBoMoJGNJEzKfZWRgLe8OdHfmhuCnwfIHigwQYi+o=
    username: RootManageSharedAccessKey
amqpMessagingNetworkExample:
  enabled: false
deviceRegistryExample:
  resetFiles: false
  storageClass: managed-premium-retain
  svc:
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-resource-group: hono
    loadBalancerIP: 40.118.0.165

COMPUTED VALUES:
adapters:
  amqp:
    hono:
      amqp: null
      app:
        maxInstances: 1
      healthCheck: null
    imageName: kaisregistry.azurecr.io/eclipse/hono-adapter-amqp-vertx:1.0.0-SNAPSHOT
    svc:
      annotations:
        service.beta.kubernetes.io/azure-load-balancer-resource-group: hono
      loadBalancerIP: 40.118.0.228
  amqpMessagingNetworkSpec:
    host: kaishonons.servicebus.windows.net
    password: vPsBoMoJGNJEzKfZWRgLe8OdHfmhuCnwfIHigwQYi+o=
    username: RootManageSharedAccessKey
  coap:
    enabled: false
    hono:
      app:
        maxInstances: 1
      healthCheck: null
    imageName: kaisregistry.azurecr.io/eclipse/hono-adapter-coap-vertx:1.0.0-SNAPSHOT
    svc:
      annotations: {}
      loadBalancerIP: null
  commandAndControlSpec:
    host: kaishonons.servicebus.windows.net
    password: vPsBoMoJGNJEzKfZWRgLe8OdHfmhuCnwfIHigwQYi+o=
    username: RootManageSharedAccessKey
  credentialsSpec:
    host: kaishonons.servicebus.windows.net
    password: vPsBoMoJGNJEzKfZWRgLe8OdHfmhuCnwfIHigwQYi+o=
    username: RootManageSharedAccessKey
  defaultTenantIdleTimeout: 1h
  deviceConnectionSpec:
    host: kaishonons.servicebus.windows.net
    password: vPsBoMoJGNJEzKfZWRgLe8OdHfmhuCnwfIHigwQYi+o=
    username: RootManageSharedAccessKey
  deviceRegistrationSpec:
    host: kaishonons.servicebus.windows.net
    password: vPsBoMoJGNJEzKfZWRgLe8OdHfmhuCnwfIHigwQYi+o=
    username: RootManageSharedAccessKey
  http:
    hono:
      app:
        maxInstances: 1
      healthCheck: null
      http: null
    imageName: kaisregistry.azurecr.io/eclipse/hono-adapter-http-vertx:1.0.0-SNAPSHOT
    svc:
      annotations:
        service.beta.kubernetes.io/azure-load-balancer-resource-group: hono
      loadBalancerIP: 40.114.139.147
  kura:
    enabled: false
    hono:
      app:
        maxInstances: 1
      healthCheck: null
      kura: null
    imageName: kaisregistry.azurecr.io/eclipse/hono-adapter-kura:1.0.0-SNAPSHOT
    svc:
      annotations: {}
      loadBalancerIP: null
  lora:
    enabled: false
    hono:
      app:
        maxInstances: 1
      healthCheck: null
      lora: null
    imageName: kaisregistry.azurecr.io/eclipse/hono-adapter-lora-vertx:1.0.0-SNAPSHOT
    svc:
      annotations: {}
      loadBalancerIP: null
  mqtt:
    hono:
      app:
        maxInstances: 1
      healthCheck: null
      mqtt: null
    imageName: kaisregistry.azurecr.io/eclipse/hono-adapter-mqtt-vertx:1.0.0-SNAPSHOT
    svc:
      annotations:
        service.beta.kubernetes.io/azure-load-balancer-resource-group: hono
      loadBalancerIP: 40.114.223.12
  tenantSpec:
    host: kaishonons.servicebus.windows.net
    password: vPsBoMoJGNJEzKfZWRgLe8OdHfmhuCnwfIHigwQYi+o=
    username: RootManageSharedAccessKey
amqpMessagingNetworkExample:
  broker:
    artemis:
      imageName: enmasseproject/activemq-artemis:2.2.0-4
    servicebus:
      host: null
      saslPassword: null
      saslUsername: null
    type: artemis
  dispatchRouter:
    imageName: quay.io/enmasse/qdrouterd-base:1.7.0
    svc:
      annotations: {}
      loadBalancerIP: null
  enabled: false
authServer:
  hono:
    app:
      maxInstances: 1
    auth:
      amqp: null
      svc: null
    healthCheck: null
  imageName: kaisregistry.azurecr.io/eclipse/hono-service-auth:1.0.0-SNAPSHOT
dataGridExample:
  enabled: false
  imageName: jboss/infinispan-server:9.4.11.Final
defaultJavaOptions: -XX:MinRAMPercentage=80 -XX:MaxRAMPercentage=80
deviceConnectionService:
  enabled: false
  hono:
    app:
      maxInstances: 1
      startupTimeout: 180
    auth: null
    deviceConnection:
      amqp: null
      remote: null
    healthCheck: null
  imageName: kaisregistry.azurecr.io/eclipse/hono-service-device-connection:1.0.0-SNAPSHOT
  svc:
    annotations: {}
deviceRegistryExample:
  data:
    credentialsFile: example-credentials.json
    devicesFile: example-device-identities.json
    resetOnStartup: true
    tenantsFile: example-tenants.json
  enabled: true
  hono:
    auth: null
    healthCheck: null
    registry:
      amqp: null
      rest: null
  imageName: kaisregistry.azurecr.io/eclipse/hono-service-device-registry:1.0.0-SNAPSHOT
  resetFiles: false
  storageClass: managed-premium-retain
  svc:
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-resource-group: hono
    loadBalancerIP: 40.118.0.165
grafana:
  admin:
    existingSecret: ""
    passwordKey: admin-password
    userKey: admin-user
  adminPassword: admin
  adminUser: admin
  affinity: {}
  dashboardProviders: {}
  dashboards: {}
  dashboardsConfigMaps: {}
  datasources: {}
  deploymentStrategy:
    type: RollingUpdate
  downloadDashboardsImage:
    pullPolicy: IfNotPresent
    repository: appropriate/curl
    tag: latest
  enabled: true
  env: {}
  envFromSecret: ""
  extraConfigmapMounts: []
  extraContainers: ""
  extraEmptyDirMounts: []
  extraInitContainers: []
  extraSecretMounts: []
  extraVolumeMounts: []
  global: {}
  grafana.ini:
    analytics:
      check_for_updates: true
    grafana_net:
      url: https://grafana.net
    log:
      mode: console
    paths:
      data: /var/lib/grafana/data
      logs: /var/log/grafana
      plugins: /var/lib/grafana/plugins
      provisioning: /etc/grafana/provisioning
  image:
    pullPolicy: IfNotPresent
    repository: grafana/grafana
    tag: 6.2.5
  ingress:
    annotations: {}
    enabled: false
    hosts:
    - chart-example.local
    labels: {}
    path: /
    tls: []
  initChownData:
    enabled: true
    image:
      pullPolicy: IfNotPresent
      repository: busybox
      tag: "1.30"
    resources: {}
  ldap:
    config: ""
    existingSecret: ""
  livenessProbe:
    failureThreshold: 10
    httpGet:
      path: /api/health
      port: 3000
    initialDelaySeconds: 60
    timeoutSeconds: 30
  nodeSelector: {}
  notifiers: {}
  persistence:
    accessModes:
    - ReadWriteOnce
    enabled: false
    finalizers:
    - kubernetes.io/pvc-protection
    size: 10Gi
  plugins: []
  rbac:
    create: true
    namespaced: true
    pspEnabled: true
    pspUseAppArmor: true
  readinessProbe:
    httpGet:
      path: /api/health
      port: 3000
  replicas: 1
  resources: {}
  securityContext:
    fsGroup: 472
    runAsUser: 472
  service:
    annotations: {}
    labels:
      app.kubernetes.io/component: dashboard
      app.kubernetes.io/name: eclipse-hono
    port: 3000
    targetPort: 3000
    type: ClusterIP
  serviceAccount:
    create: true
  sidecar:
    dashboards:
      enabled: true
      folder: /tmp/dashboards
      label: grafana_dashboard
      provider:
        disableDelete: false
        folder: ""
        name: sidecarProvider
        orgid: 1
        type: file
    datasources:
      enabled: true
      label: grafana_datasource
    image: kiwigrid/k8s-sidecar:0.0.18
    imagePullPolicy: IfNotPresent
    resources: {}
  smtp:
    existingSecret: ""
    passwordKey: password
    userKey: user
  testFramework:
    image: dduportal/bats
    securityContext: {}
    tag: 0.4.0
  tolerations: []
healthCheckPort: 8088
jaegerAgentImage: jaegertracing/jaeger-agent:1.13.1
jaegerBackendExample:
  allInOneImage: jaegertracing/all-in-one:1.13.1
  enabled: false
  svc:
    annotations: {}
    loadBalancerIP: null
monitoring:
  prometheus:
    port: 8088
platform: kubernetes
prometheus:
  alertmanager:
    affinity: {}
    baseURL: /
    configFileName: alertmanager.yml
    configFromSecret: ""
    configMapOverrideName: ""
    enabled: false
    extraArgs: {}
    extraEnv: {}
    extraSecretMounts: []
    image:
      pullPolicy: IfNotPresent
      repository: prom/alertmanager
      tag: v0.18.0
    ingress:
      annotations: {}
      enabled: false
      extraLabels: {}
      hosts: []
      tls: []
    name: alertmanager
    nodeSelector: {}
    persistentVolume:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: true
      existingClaim: ""
      mountPath: /data
      size: 2Gi
      subPath: ""
    podAnnotations: {}
    prefixURL: ""
    priorityClassName: ""
    replicaCount: 1
    resources: {}
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    service:
      annotations: {}
      clusterIP: ""
      externalIPs: []
      labels: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 80
      type: ClusterIP
    statefulSet:
      enabled: false
      headless:
        annotations: {}
        labels: {}
        servicePort: 80
      podManagementPolicy: OrderedReady
    tolerations: []
  alertmanagerFiles:
    alertmanager.yml:
      global: {}
      receivers:
      - name: default-receiver
      route:
        group_interval: 5m
        group_wait: 10s
        receiver: default-receiver
        repeat_interval: 3h
  configmapReload:
    extraArgs: {}
    extraConfigmapMounts: []
    extraVolumeDirs: []
    image:
      pullPolicy: IfNotPresent
      repository: jimmidyson/configmap-reload
      tag: v0.2.2
    name: configmap-reload
    resources: {}
  createInstance: true
  global: {}
  kubeStateMetrics:
    args: {}
    enabled: false
    image:
      pullPolicy: IfNotPresent
      repository: quay.io/coreos/kube-state-metrics
      tag: v1.6.0
    name: kube-state-metrics
    nodeSelector: {}
    pod:
      labels: {}
    podAnnotations: {}
    priorityClassName: ""
    replicaCount: 1
    resources: {}
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    service:
      annotations:
        prometheus.io/scrape: "true"
      clusterIP: None
      externalIPs: []
      labels: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 80
      type: ClusterIP
    tolerations: []
  networkPolicy:
    enabled: false
  nodeExporter:
    enabled: false
    extraArgs: {}
    extraConfigmapMounts: []
    extraHostPathMounts: []
    hostNetwork: true
    hostPID: true
    image:
      pullPolicy: IfNotPresent
      repository: prom/node-exporter
      tag: v0.18.0
    name: node-exporter
    nodeSelector: {}
    pod:
      labels: {}
    podAnnotations: {}
    podSecurityPolicy:
      annotations: {}
      enabled: false
    priorityClassName: ""
    resources: {}
    securityContext: {}
    service:
      annotations:
        prometheus.io/scrape: "true"
      clusterIP: None
      externalIPs: []
      hostPort: 9100
      labels: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 9100
      type: ClusterIP
    tolerations: []
    updateStrategy:
      type: RollingUpdate
  pushgateway:
    enabled: false
    extraArgs: {}
    image:
      pullPolicy: IfNotPresent
      repository: prom/pushgateway
      tag: v0.8.0
    ingress:
      annotations: {}
      enabled: false
      hosts: []
      tls: []
    name: pushgateway
    nodeSelector: {}
    persistentVolume:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: false
      existingClaim: ""
      mountPath: /data
      size: 2Gi
      subPath: ""
    podAnnotations: {}
    priorityClassName: ""
    replicaCount: 1
    resources: {}
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    service:
      annotations:
        prometheus.io/probe: pushgateway
      clusterIP: ""
      externalIPs: []
      labels: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 9091
      type: ClusterIP
    tolerations: []
  rbac:
    create: true
  server:
    affinity: {}
    baseURL: ""
    configMapOverrideName: prometheus-config
    configPath: /etc/config/prometheus.yml
    emptyDir:
      sizeLimit: ""
    enableAdminApi: false
    env: {}
    extraArgs: {}
    extraConfigmapMounts: []
    extraHostPathMounts: []
    extraSecretMounts: []
    extraVolumeMounts: []
    extraVolumes: []
    global:
      evaluation_interval: 1m
      scrape_interval: 10s
      scrape_timeout: 10s
    image:
      pullPolicy: IfNotPresent
      repository: prom/prometheus
      tag: v2.11.1
    ingress:
      annotations: {}
      enabled: false
      extraLabels: {}
      hosts: []
      tls: []
    name: server
    nodeSelector: {}
    persistentVolume:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: true
      existingClaim: ""
      mountPath: /data
      size: 8Gi
      subPath: ""
    podAnnotations: {}
    podLabels: {}
    prefixURL: ""
    priorityClassName: ""
    replicaCount: 1
    resources: {}
    retention: 15d
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    service:
      annotations: {}
      clusterIP: ""
      externalIPs: []
      labels: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 9090
      type: ClusterIP
    skipTSDBLock: false
    statefulSet:
      annotations: {}
      enabled: false
      headless:
        annotations: {}
        labels: {}
        servicePort: 80
      labels: {}
      podManagementPolicy: OrderedReady
    terminationGracePeriodSeconds: 300
    tolerations: []
  serverFiles:
    alerts: {}
    prometheus.yml:
      rule_files:
      - /etc/config/rules
      - /etc/config/alerts
      scrape_configs:
      - job_name: prometheus
        static_configs:
        - targets:
          - localhost:9090
      - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        job_name: kubernetes-apiservers
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - action: keep
          regex: default;kubernetes;https
          source_labels:
          - __meta_kubernetes_namespace
          - __meta_kubernetes_service_name
          - __meta_kubernetes_endpoint_port_name
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
      - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        job_name: kubernetes-nodes
        kubernetes_sd_configs:
        - role: node
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - replacement: kubernetes.default.svc:443
          target_label: __address__
        - regex: (.+)
          replacement: /api/v1/nodes/$1/proxy/metrics
          source_labels:
          - __meta_kubernetes_node_name
          target_label: __metrics_path__
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
      - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        job_name: kubernetes-nodes-cadvisor
        kubernetes_sd_configs:
        - role: node
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - replacement: kubernetes.default.svc:443
          target_label: __address__
        - regex: (.+)
          replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
          source_labels:
          - __meta_kubernetes_node_name
          target_label: __metrics_path__
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
      - job_name: kubernetes-service-endpoints
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - action: keep
          regex: true
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_scrape
        - action: replace
          regex: (https?)
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_scheme
          target_label: __scheme__
        - action: replace
          regex: (.+)
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_path
          target_label: __metrics_path__
        - action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          source_labels:
          - __address__
          - __meta_kubernetes_service_annotation_prometheus_io_port
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: kubernetes_namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_service_name
          target_label: kubernetes_name
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: kubernetes_node
      - honor_labels: true
        job_name: prometheus-pushgateway
        kubernetes_sd_configs:
        - role: service
        relabel_configs:
        - action: keep
          regex: pushgateway
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_probe
      - job_name: kubernetes-services
        kubernetes_sd_configs:
        - role: service
        metrics_path: /probe
        params:
          module:
          - http_2xx
        relabel_configs:
        - action: keep
          regex: true
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_probe
        - source_labels:
          - __address__
          target_label: __param_target
        - replacement: blackbox
          target_label: __address__
        - source_labels:
          - __param_target
          target_label: instance
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels:
          - __meta_kubernetes_namespace
          target_label: kubernetes_namespace
        - source_labels:
          - __meta_kubernetes_service_name
          target_label: kubernetes_name
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - action: keep
          regex: true
          source_labels:
          - __meta_kubernetes_pod_annotation_prometheus_io_scrape
        - action: replace
          regex: (.+)
          source_labels:
          - __meta_kubernetes_pod_annotation_prometheus_io_path
          target_label: __metrics_path__
        - action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          source_labels:
          - __address__
          - __meta_kubernetes_pod_annotation_prometheus_io_port
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: kubernetes_namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: kubernetes_pod_name
    rules: {}
  serviceAccounts:
    alertmanager:
      create: false
    kubeStateMetrics:
      create: false
    nodeExporter:
      create: false
    pushgateway:
      create: false
    server:
      create: true
useLoadBalancer: true

HOOKS:
---
# hono-grafana-test
apiVersion: v1
kind: Pod
metadata:
  name: hono-grafana-test
  labels:
    app: hono-grafana
    chart: "grafana-3.7.3"
    heritage: "Tiller"
    release: "hono"
  annotations:
    "helm.sh/hook": test-success
spec:
  serviceAccountName: hono-grafana-test
  initContainers:
    - name: test-framework
      image: "dduportal/bats:0.4.0"
      command:
      - "bash"
      - "-c"
      - |
        set -ex
        # copy bats to tools dir
        cp -R /usr/local/libexec/ /tools/bats/
      volumeMounts:
      - mountPath: /tools
        name: tools
  containers:
    - name: hono-test
      image: "dduportal/bats:0.4.0"
      command: ["/tools/bats/bats", "-t", "/tests/run.sh"]
      volumeMounts:
        - mountPath: /tests
          name: tests
          readOnly: true
        - mountPath: /tools
          name: tools
  volumes:
  - name: tests
    configMap:
      name: hono-grafana-test
  - name: tools
    emptyDir: {}
  restartPolicy: Never
MANIFEST:

---
# Source: eclipse-hono/charts/grafana/templates/podsecuritypolicy.yaml
apiVersion: extensions/v1beta1
kind: PodSecurityPolicy
metadata:
  name: hono-grafana
  namespace: hono
  labels:
    app: grafana
    chart: grafana-3.7.3
    heritage: Tiller
    release: hono
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'docker/default'
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    # Default set from Docker, without DAC_OVERRIDE or CHOWN
    - FOWNER
    - FSETID
    - KILL
    - SETGID
    - SETUID
    - SETPCAP
    - NET_BIND_SERVICE
    - NET_RAW
    - SYS_CHROOT
    - MKNOD
    - AUDIT_WRITE
    - SETFCAP
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: false
---
# Source: eclipse-hono/charts/grafana/templates/tests/test-podsecuritypolicy.yaml
apiVersion: extensions/v1beta1
kind: PodSecurityPolicy
metadata:
  name: hono-grafana-test
  labels:
    app: grafana
    chart: grafana-3.7.3
    heritage: Tiller
    release: hono
spec:
  allowPrivilegeEscalation: true
  privileged: false
  hostNetwork: false
  hostIPC: false
  hostPID: false
  fsGroup:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - projected
  - secret
---
# Source: eclipse-hono/charts/grafana/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hono-grafana
  namespace: hono
  labels:
    app: grafana
    chart: grafana-3.7.3
    release: hono
    heritage: Tiller
type: Opaque
data:
  admin-user: "YWRtaW4="
  admin-password: "YWRtaW4="
  ldap-toml: ""
---
# Source: eclipse-hono/templates/grafana/grafana-datasource-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hono-grafana-datasources
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: dashboard
    grafana_datasource: "1"
type: Opaque
stringData:
  hono-datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: hono_metrics
      version: 1
      type: prometheus
      access: proxy
      orgId: 1
      url: http://hono-prometheus-server:9090
      basicAuth: false
      isDefault: true
      editable: true
---
# Source: eclipse-hono/templates/hono-adapter-amqp/hono-adapter-amqp-vertx-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hono-adapter-amqp-vertx-conf
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: adapter-amqp-vertx
type: Opaque
stringData:
  application.yml: |
    hono:
      app:
        maxInstances: 1
      amqp:
        bindAddress: "0.0.0.0"
        keyPath: "/etc/hono/key.pem"
        certPath: "/etc/hono/cert.pem"
        insecurePortEnabled: true
        insecurePortBindAddress: "0.0.0.0"
        tenantIdleTimeout: "1h"
      healthCheck:
        port: 8088
        bindAddress: "0.0.0.0"
        keyPath: "/etc/hono/key.pem"
        certPath: "/etc/hono/cert.pem"
      messaging:
        host: kaishonons.servicebus.windows.net
        password: vPsBoMoJGNJEzKfZWRgLe8OdHfmhuCnwfIHigwQYi+o=
        username: RootManageSharedAccessKey
        
      command:
        host: kaishonons.servicebus.windows.net
        password: vPsBoMoJGNJEzKfZWRgLe8OdHfmhuCnwfIHigwQYi+o=
        username: RootManageSharedAccessKey
        
      tenant:
        name: Hono adapter-amqp-vertx
        host: hono-service-device-registry
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: /etc/hono/trusted-certs.pem
        hostnameVerificationRequired: false
      registration:
        name: Hono adapter-amqp-vertx
        host: hono-service-device-registry
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: /etc/hono/trusted-certs.pem
        hostnameVerificationRequired: false
      credentials:
        name: Hono adapter-amqp-vertx
        host: hono-service-device-registry
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: /etc/hono/trusted-certs.pem
        hostnameVerificationRequired: false
      deviceConnection:
        host: kaishonons.servicebus.windows.net
        password: vPsBoMoJGNJEzKfZWRgLe8OdHfmhuCnwfIHigwQYi+o=
        username: RootManageSharedAccessKey
data:
  key.pem: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZzhiTXM3cEFZWW9pSDZWZ3EKZFROVkEwek9jc2ZzTCtPd1hiQTRiNGExTnVLaFJBTkNBQVFQYnZQTG12TWpjN3FiaDVtbW0yN1dBalNXMkNKUQp2czJxVmFDR2Q4ZGoyZ0RIVnRqUGR3MnhnV3l6bFRodG5TZmdZdS9yVHE3U0doU3NtNG9tRVdtNgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
  cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNQVENDQWVPZ0F3SUJBZ0lKQUlBemVRSXNueVh6TUFvR0NDcUdTTTQ5QkFNQ01GQXhDekFKQmdOVkJBWVQKQWtOQk1ROHdEUVlEVlFRSERBWlBkSFJoZDJFeEZEQVNCZ05WQkFvTUMwVmpiR2x3YzJVZ1NXOVVNUTB3Q3dZRApWUVFMREFSSWIyNXZNUXN3Q1FZRFZRUUREQUpqWVRBZUZ3MHhPVEE1TVRnd09ETTFOREJhRncweU1EQTVNVGN3Ck9ETTFOREJhTUZveEN6QUpCZ05WQkFZVEFrTkJNUTh3RFFZRFZRUUhEQVpQZEhSaGQyRXhGREFTQmdOVkJBb00KQzBWamJHbHdjMlVnU1c5VU1RMHdDd1lEVlFRTERBUkliMjV2TVJVd0V3WURWUVFEREF4aGJYRndMV0ZrWVhCMApaWEl3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFQYnZQTG12TWpjN3FiaDVtbW0yN1dBalNXCjJDSlF2czJxVmFDR2Q4ZGoyZ0RIVnRqUGR3MnhnV3l6bFRodG5TZmdZdS9yVHE3U0doU3NtNG9tRVdtNm80R2IKTUlHWU1CMEdBMVVkRGdRV0JCVHBiY0ZHY3U3STdkQnN4NTBQb3E5NUwveGw2akFMQmdOVkhROEVCQU1DQTZndwpIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUVzR0ExVWRFUVJFTUVLQ0YyaHZibTh0CllXUmhjSFJsY2kxaGJYRndMWFpsY25SNGdoeG9iMjV2TFdGa1lYQjBaWEl0WVcxeGNDMTJaWEowZUM1b2IyNXYKZ2dsc2IyTmhiR2h2YzNRd0NnWUlLb1pJemowRUF3SURTQUF3UlFJZ0o5ZmhOOWVJdU5EcVZyc0xmenNXaGVIUgpWamxqYWhYNEdWeVFOR1ZHT0pJQ0lRREtLVlg0WWc5dVUySXVzWVE3YkNDcUp1V1d4V01qNjhCSEJqSkQydHRGCm5BPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQjJEQ0NBWDZnQXdJQkFnSUpBSmNRazhydi81VGZNQW9HQ0NxR1NNNDlCQU1DTUZJeEN6QUpCZ05WQkFZVApBa05CTVE4d0RRWURWUVFIREFaUGRIUmhkMkV4RkRBU0JnTlZCQW9NQzBWamJHbHdjMlVnU1c5VU1RMHdDd1lEClZRUUxEQVJJYjI1dk1RMHdDd1lEVlFRRERBUnliMjkwTUI0WERURTVNRGt4T0RBNE16VXpPVm9YRFRJd01Ea3gKTnpBNE16VXpPVm93VURFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRQpDZ3dMUldOc2FYQnpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4Q3pBSkJnTlZCQU1NQW1OaE1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU1Y0pZN2p5MDBuMlBtN3NhMXV4VjltMzlTdGRHMGtXMGpkeGsKeWxwYmszbFZReUpGVkF5VmVnS0FIa3dpYXR4bnh1YU8wSUk3anIzOFVYR2dIbzlEQjZNL01EMHdIUVlEVlIwTwpCQllFRkgzbThMVStJb1UvajVkb1R5eGQ0UUZUaUU1bE1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0N3WURWUjBQCkJBUURBZ0VHTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUVaVXV2djVYMWhPRmhraHpRUlU2QkN5RGJDS2dkWncKdkg2dm45SmFUd2pGQWlFQXRVbXRsQVBieHdGR0pXTjhYQ1A3OHY1MGdZZ05XWHRSRHBpcVFHOTlJb0E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  trusted-certs.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIyRENDQVg2Z0F3SUJBZ0lKQUpjUWs4cnYvNVRmTUFvR0NDcUdTTTQ5QkFNQ01GSXhDekFKQmdOVkJBWVQKQWtOQk1ROHdEUVlEVlFRSERBWlBkSFJoZDJFeEZEQVNCZ05WQkFvTUMwVmpiR2x3YzJVZ1NXOVVNUTB3Q3dZRApWUVFMREFSSWIyNXZNUTB3Q3dZRFZRUUREQVJ5YjI5ME1CNFhEVEU1TURreE9EQTRNelV6T1ZvWERUSXdNRGt4Ck56QTRNelV6T1Zvd1VERUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjNZVEVVTUJJR0ExVUUKQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEN6QUpCZ05WQkFNTUFtTmhNRmt3RXdZSApLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFNWNKWTdqeTAwbjJQbTdzYTF1eFY5bTM5U3RkRzBrVzBqZHhrCnlscGJrM2xWUXlKRlZBeVZlZ0tBSGt3aWF0eG54dWFPMElJN2pyMzhVWEdnSG85REI2TS9NRDB3SFFZRFZSME8KQkJZRUZIM204TFUrSW9VL2o1ZG9UeXhkNFFGVGlFNWxNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdDd1lEVlIwUApCQVFEQWdFR01Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lFWlV1dnY1WDFoT0Zoa2h6UVJVNkJDeURiQ0tnZFp3CnZINnZuOUphVHdqRkFpRUF0VW10bEFQYnh3RkdKV044WENQNzh2NTBnWWdOV1h0UkRwaXFRRzk5SW9BPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDZURDQ0FoK2dBd0lCQWdJVUVzWTJyRXpaL3EvSElQdE4vZXBLRjB3NUlYVXdDZ1lJS29aSXpqMEVBd0l3ClVqRUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjNZVEVVTUJJR0ExVUVDZ3dMUldOc2FYQnoKWlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eERUQUxCZ05WQkFNTUJISnZiM1F3SGhjTk1Ua3dPVEU0TURnegpOVE01V2hjTk1qQXdPVEUzTURnek5UTTVXakJTTVFzd0NRWURWUVFHRXdKRFFURVBNQTBHQTFVRUJ3d0dUM1IwCllYZGhNUlF3RWdZRFZRUUtEQXRGWTJ4cGNITmxJRWx2VkRFTk1Bc0dBMVVFQ3d3RVNHOXViekVOTUFzR0ExVUUKQXd3RWNtOXZkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCTEpRUGdUdi91TWNKOHZKZDg0dQpLQWlESkI5ZEM4VFVUL0ttaW54TTRNMkpyTXN3a0pmMGt0eVdJQm8veVZEWnJIeUtHY0Zld1REZ0p2eE1zV2FpCjdVQ2pnZEl3Z2M4d0hRWURWUjBPQkJZRUZBYWlxY3VveEFuY3FIK2ZLNFh3NzFmeVkxV1RNSUdQQmdOVkhTTUUKZ1ljd2dZU0FGQWFpcWN1b3hBbmNxSCtmSzRYdzcxZnlZMVdUb1Zha1ZEQlNNUXN3Q1FZRFZRUUdFd0pEUVRFUApNQTBHQTFVRUJ3d0dUM1IwWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFClNHOXViekVOTUFzR0ExVUVBd3dFY205dmRJSVVFc1kyckV6Wi9xL0hJUHROL2VwS0YwdzVJWFV3RHdZRFZSMFQKQVFIL0JBVXdBd0VCL3pBTEJnTlZIUThFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdGRUMwbnNvRgpwaXhWcVVhc2dZc3MrRGFQMDNVaDQvR00wQW8wN0lyQWxhZ0NJRHhOY2wwRUwyWUtPSkY4N0t4L2haQ0JxckV4Clo1QjU0VlFudW94SHpIaTQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  adapter.credentials: dXNlcm5hbWU9YW1xcC1hZGFwdGVyQEhPTk8KcGFzc3dvcmQ9YW1xcC1zZWNyZXQK
---
# Source: eclipse-hono/templates/hono-adapter-http/hono-adapter-http-vertx-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hono-adapter-http-vertx-conf
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: adapter-http-vertx
type: Opaque
stringData:
  application.yml: |
    hono:
      app:
        maxInstances: 1
      http:
        bindAddress: 0.0.0.0
        insecurePortBindAddress: 0.0.0.0
        insecurePortEnabled: true
        keyPath: /etc/hono/key.pem
        certPath: /etc/hono/cert.pem
        tenantIdleTimeout: "1h"
      healthCheck:
        port: 8088
        bindAddress: "0.0.0.0"
        keyPath: "/etc/hono/key.pem"
        certPath: "/etc/hono/cert.pem"
      messaging:
        host: kaishonons.servicebus.windows.net
        password: vPsBoMoJGNJEzKfZWRgLe8OdHfmhuCnwfIHigwQYi+o=
        username: RootManageSharedAccessKey
        
      command:
        host: kaishonons.servicebus.windows.net
        password: vPsBoMoJGNJEzKfZWRgLe8OdHfmhuCnwfIHigwQYi+o=
        username: RootManageSharedAccessKey
        
      tenant:
        name: Hono adapter-http-vertx
        host: hono-service-device-registry
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: /etc/hono/trusted-certs.pem
        hostnameVerificationRequired: false
      registration:
        name: Hono adapter-http-vertx
        host: hono-service-device-registry
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: /etc/hono/trusted-certs.pem
        hostnameVerificationRequired: false
      credentials:
        name: Hono adapter-http-vertx
        host: hono-service-device-registry
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: /etc/hono/trusted-certs.pem
        hostnameVerificationRequired: false
      deviceConnection:
        host: kaishonons.servicebus.windows.net
        password: vPsBoMoJGNJEzKfZWRgLe8OdHfmhuCnwfIHigwQYi+o=
        username: RootManageSharedAccessKey
data:
  key.pem: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZzJOdksvL28xbGsvSnlSSDgKR3hRZWsyb3dJdzUrZHZvaEozMlMyUWpTcjdTaFJBTkNBQVFGWG5PL0tFN1owMDRXZXB1QTl3ZWI5MWg0K0FpbApJbE9vQ1UzRHZzZ1IyZXVmOFRNN2MzMlJuUlU3MnltZnlQNG1FNUdyNEI0Z1ZESlZ4RVBJV2VjKwotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
  cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNQVENDQWVPZ0F3SUJBZ0lKQUlBemVRSXNueVh0TUFvR0NDcUdTTTQ5QkFNQ01GQXhDekFKQmdOVkJBWVQKQWtOQk1ROHdEUVlEVlFRSERBWlBkSFJoZDJFeEZEQVNCZ05WQkFvTUMwVmpiR2x3YzJVZ1NXOVVNUTB3Q3dZRApWUVFMREFSSWIyNXZNUXN3Q1FZRFZRUUREQUpqWVRBZUZ3MHhPVEE1TVRnd09ETTFOREJhRncweU1EQTVNVGN3Ck9ETTFOREJhTUZveEN6QUpCZ05WQkFZVEFrTkJNUTh3RFFZRFZRUUhEQVpQZEhSaGQyRXhGREFTQmdOVkJBb00KQzBWamJHbHdjMlVnU1c5VU1RMHdDd1lEVlFRTERBUkliMjV2TVJVd0V3WURWUVFEREF4b2RIUndMV0ZrWVhCMApaWEl3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFGWG5PL0tFN1owMDRXZXB1QTl3ZWI5MWg0CitBaWxJbE9vQ1UzRHZzZ1IyZXVmOFRNN2MzMlJuUlU3MnltZnlQNG1FNUdyNEI0Z1ZESlZ4RVBJV2VjK280R2IKTUlHWU1CMEdBMVVkRGdRV0JCUzBEYklOL2JaaUZGL1JvZndiOUE0NFZGLzIwakFMQmdOVkhROEVCQU1DQTZndwpIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUVzR0ExVWRFUVJFTUVLQ0YyaHZibTh0CllXUmhjSFJsY2kxb2RIUndMWFpsY25SNGdoeG9iMjV2TFdGa1lYQjBaWEl0YUhSMGNDMTJaWEowZUM1b2IyNXYKZ2dsc2IyTmhiR2h2YzNRd0NnWUlLb1pJemowRUF3SURTQUF3UlFJaEFOekh4RUtWeC9rUVpYZmVEQ3ZudElZZQpYS3BBUUpZbHFCTDA3bXdDd1ZaZEFpQkpzQVJsNVd3b2UvbDRqSVloVEtMTmVUK2ZhWXg1WHd6cU9iYVFtRDA2CnR3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQjJEQ0NBWDZnQXdJQkFnSUpBSmNRazhydi81VGZNQW9HQ0NxR1NNNDlCQU1DTUZJeEN6QUpCZ05WQkFZVApBa05CTVE4d0RRWURWUVFIREFaUGRIUmhkMkV4RkRBU0JnTlZCQW9NQzBWamJHbHdjMlVnU1c5VU1RMHdDd1lEClZRUUxEQVJJYjI1dk1RMHdDd1lEVlFRRERBUnliMjkwTUI0WERURTVNRGt4T0RBNE16VXpPVm9YRFRJd01Ea3gKTnpBNE16VXpPVm93VURFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRQpDZ3dMUldOc2FYQnpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4Q3pBSkJnTlZCQU1NQW1OaE1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU1Y0pZN2p5MDBuMlBtN3NhMXV4VjltMzlTdGRHMGtXMGpkeGsKeWxwYmszbFZReUpGVkF5VmVnS0FIa3dpYXR4bnh1YU8wSUk3anIzOFVYR2dIbzlEQjZNL01EMHdIUVlEVlIwTwpCQllFRkgzbThMVStJb1UvajVkb1R5eGQ0UUZUaUU1bE1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0N3WURWUjBQCkJBUURBZ0VHTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUVaVXV2djVYMWhPRmhraHpRUlU2QkN5RGJDS2dkWncKdkg2dm45SmFUd2pGQWlFQXRVbXRsQVBieHdGR0pXTjhYQ1A3OHY1MGdZZ05XWHRSRHBpcVFHOTlJb0E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  trusted-certs.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIyRENDQVg2Z0F3SUJBZ0lKQUpjUWs4cnYvNVRmTUFvR0NDcUdTTTQ5QkFNQ01GSXhDekFKQmdOVkJBWVQKQWtOQk1ROHdEUVlEVlFRSERBWlBkSFJoZDJFeEZEQVNCZ05WQkFvTUMwVmpiR2x3YzJVZ1NXOVVNUTB3Q3dZRApWUVFMREFSSWIyNXZNUTB3Q3dZRFZRUUREQVJ5YjI5ME1CNFhEVEU1TURreE9EQTRNelV6T1ZvWERUSXdNRGt4Ck56QTRNelV6T1Zvd1VERUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjNZVEVVTUJJR0ExVUUKQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEN6QUpCZ05WQkFNTUFtTmhNRmt3RXdZSApLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFNWNKWTdqeTAwbjJQbTdzYTF1eFY5bTM5U3RkRzBrVzBqZHhrCnlscGJrM2xWUXlKRlZBeVZlZ0tBSGt3aWF0eG54dWFPMElJN2pyMzhVWEdnSG85REI2TS9NRDB3SFFZRFZSME8KQkJZRUZIM204TFUrSW9VL2o1ZG9UeXhkNFFGVGlFNWxNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdDd1lEVlIwUApCQVFEQWdFR01Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lFWlV1dnY1WDFoT0Zoa2h6UVJVNkJDeURiQ0tnZFp3CnZINnZuOUphVHdqRkFpRUF0VW10bEFQYnh3RkdKV044WENQNzh2NTBnWWdOV1h0UkRwaXFRRzk5SW9BPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDZURDQ0FoK2dBd0lCQWdJVUVzWTJyRXpaL3EvSElQdE4vZXBLRjB3NUlYVXdDZ1lJS29aSXpqMEVBd0l3ClVqRUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjNZVEVVTUJJR0ExVUVDZ3dMUldOc2FYQnoKWlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eERUQUxCZ05WQkFNTUJISnZiM1F3SGhjTk1Ua3dPVEU0TURnegpOVE01V2hjTk1qQXdPVEUzTURnek5UTTVXakJTTVFzd0NRWURWUVFHRXdKRFFURVBNQTBHQTFVRUJ3d0dUM1IwCllYZGhNUlF3RWdZRFZRUUtEQXRGWTJ4cGNITmxJRWx2VkRFTk1Bc0dBMVVFQ3d3RVNHOXViekVOTUFzR0ExVUUKQXd3RWNtOXZkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCTEpRUGdUdi91TWNKOHZKZDg0dQpLQWlESkI5ZEM4VFVUL0ttaW54TTRNMkpyTXN3a0pmMGt0eVdJQm8veVZEWnJIeUtHY0Zld1REZ0p2eE1zV2FpCjdVQ2pnZEl3Z2M4d0hRWURWUjBPQkJZRUZBYWlxY3VveEFuY3FIK2ZLNFh3NzFmeVkxV1RNSUdQQmdOVkhTTUUKZ1ljd2dZU0FGQWFpcWN1b3hBbmNxSCtmSzRYdzcxZnlZMVdUb1Zha1ZEQlNNUXN3Q1FZRFZRUUdFd0pEUVRFUApNQTBHQTFVRUJ3d0dUM1IwWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFClNHOXViekVOTUFzR0ExVUVBd3dFY205dmRJSVVFc1kyckV6Wi9xL0hJUHROL2VwS0YwdzVJWFV3RHdZRFZSMFQKQVFIL0JBVXdBd0VCL3pBTEJnTlZIUThFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdGRUMwbnNvRgpwaXhWcVVhc2dZc3MrRGFQMDNVaDQvR00wQW8wN0lyQWxhZ0NJRHhOY2wwRUwyWUtPSkY4N0t4L2haQ0JxckV4Clo1QjU0VlFudW94SHpIaTQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  adapter.credentials: dXNlcm5hbWU9aHR0cC1hZGFwdGVyQEhPTk8KcGFzc3dvcmQ9aHR0cC1zZWNyZXQK
---
# Source: eclipse-hono/templates/hono-adapter-mqtt/hono-adapter-mqtt-vertx-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hono-adapter-mqtt-vertx-conf
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: adapter-mqtt-vertx
type: Opaque
stringData:
  application.yml: |
    hono:
      app:
        maxInstances: 1
      mqtt:
        bindAddress: 0.0.0.0
        insecurePortBindAddress: 0.0.0.0
        insecurePortEnabled: true
        keyPath: /etc/hono/key.pem
        certPath: /etc/hono/cert.pem
        tenantIdleTimeout: "1h"
      healthCheck:
        port: 8088
        bindAddress: "0.0.0.0"
        keyPath: "/etc/hono/key.pem"
        certPath: "/etc/hono/cert.pem"
      messaging:
        host: kaishonons.servicebus.windows.net
        password: vPsBoMoJGNJEzKfZWRgLe8OdHfmhuCnwfIHigwQYi+o=
        username: RootManageSharedAccessKey
        
      command:
        host: kaishonons.servicebus.windows.net
        password: vPsBoMoJGNJEzKfZWRgLe8OdHfmhuCnwfIHigwQYi+o=
        username: RootManageSharedAccessKey
        
      tenant:
        name: Hono adapter-mqtt-vertx
        host: hono-service-device-registry
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: /etc/hono/trusted-certs.pem
        hostnameVerificationRequired: false
      registration:
        name: Hono adapter-mqtt-vertx
        host: hono-service-device-registry
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: /etc/hono/trusted-certs.pem
        hostnameVerificationRequired: false
      credentials:
        name: Hono adapter-mqtt-vertx
        host: hono-service-device-registry
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: /etc/hono/trusted-certs.pem
        hostnameVerificationRequired: false
      deviceConnection:
        host: kaishonons.servicebus.windows.net
        password: vPsBoMoJGNJEzKfZWRgLe8OdHfmhuCnwfIHigwQYi+o=
        username: RootManageSharedAccessKey
data:
  key.pem: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZ0ZueDlvQ01LdG9WK1FYUUQKU0dCZXVROXVGVFlld0FlWm9xSG9ZT09Zdm95aFJBTkNBQVFLK0Q3UkU3TzhIdUtFVmVCckM3UWw2NFJUUlcrbQovNFloTUxQYWp5UVFDaEp6cWZxcVZBbGhOZS9odk5yd1hsN1FiUkJ5ak13TEFDemM5SXlrMlhVYwotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
  cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNQVENDQWVPZ0F3SUJBZ0lKQUlBemVRSXNueVh2TUFvR0NDcUdTTTQ5QkFNQ01GQXhDekFKQmdOVkJBWVQKQWtOQk1ROHdEUVlEVlFRSERBWlBkSFJoZDJFeEZEQVNCZ05WQkFvTUMwVmpiR2x3YzJVZ1NXOVVNUTB3Q3dZRApWUVFMREFSSWIyNXZNUXN3Q1FZRFZRUUREQUpqWVRBZUZ3MHhPVEE1TVRnd09ETTFOREJhRncweU1EQTVNVGN3Ck9ETTFOREJhTUZveEN6QUpCZ05WQkFZVEFrTkJNUTh3RFFZRFZRUUhEQVpQZEhSaGQyRXhGREFTQmdOVkJBb00KQzBWamJHbHdjMlVnU1c5VU1RMHdDd1lEVlFRTERBUkliMjV2TVJVd0V3WURWUVFEREF4dGNYUjBMV0ZrWVhCMApaWEl3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFLK0Q3UkU3TzhIdUtFVmVCckM3UWw2NFJUClJXK20vNFloTUxQYWp5UVFDaEp6cWZxcVZBbGhOZS9odk5yd1hsN1FiUkJ5ak13TEFDemM5SXlrMlhVY280R2IKTUlHWU1CMEdBMVVkRGdRV0JCUWhPZ0Q1cFJZNDhKa3hHdGlISW5qYUxUblFKREFMQmdOVkhROEVCQU1DQTZndwpIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUVzR0ExVWRFUVJFTUVLQ0YyaHZibTh0CllXUmhjSFJsY2kxdGNYUjBMWFpsY25SNGdoeG9iMjV2TFdGa1lYQjBaWEl0YlhGMGRDMTJaWEowZUM1b2IyNXYKZ2dsc2IyTmhiR2h2YzNRd0NnWUlLb1pJemowRUF3SURTQUF3UlFJaEFOSytka0VZOFFESXpEVmJPSitBU1ZQVwp2S0NJY3NiOFlJdWhpeGhvSTVaS0FpQjBWVjlkMlppUTBKSGIyR29rL0NsNVV6aU9PRktwczlIVXd5RGpOQmJlCnlnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQjJEQ0NBWDZnQXdJQkFnSUpBSmNRazhydi81VGZNQW9HQ0NxR1NNNDlCQU1DTUZJeEN6QUpCZ05WQkFZVApBa05CTVE4d0RRWURWUVFIREFaUGRIUmhkMkV4RkRBU0JnTlZCQW9NQzBWamJHbHdjMlVnU1c5VU1RMHdDd1lEClZRUUxEQVJJYjI1dk1RMHdDd1lEVlFRRERBUnliMjkwTUI0WERURTVNRGt4T0RBNE16VXpPVm9YRFRJd01Ea3gKTnpBNE16VXpPVm93VURFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRQpDZ3dMUldOc2FYQnpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4Q3pBSkJnTlZCQU1NQW1OaE1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU1Y0pZN2p5MDBuMlBtN3NhMXV4VjltMzlTdGRHMGtXMGpkeGsKeWxwYmszbFZReUpGVkF5VmVnS0FIa3dpYXR4bnh1YU8wSUk3anIzOFVYR2dIbzlEQjZNL01EMHdIUVlEVlIwTwpCQllFRkgzbThMVStJb1UvajVkb1R5eGQ0UUZUaUU1bE1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0N3WURWUjBQCkJBUURBZ0VHTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUVaVXV2djVYMWhPRmhraHpRUlU2QkN5RGJDS2dkWncKdkg2dm45SmFUd2pGQWlFQXRVbXRsQVBieHdGR0pXTjhYQ1A3OHY1MGdZZ05XWHRSRHBpcVFHOTlJb0E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  trusted-certs.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIyRENDQVg2Z0F3SUJBZ0lKQUpjUWs4cnYvNVRmTUFvR0NDcUdTTTQ5QkFNQ01GSXhDekFKQmdOVkJBWVQKQWtOQk1ROHdEUVlEVlFRSERBWlBkSFJoZDJFeEZEQVNCZ05WQkFvTUMwVmpiR2x3YzJVZ1NXOVVNUTB3Q3dZRApWUVFMREFSSWIyNXZNUTB3Q3dZRFZRUUREQVJ5YjI5ME1CNFhEVEU1TURreE9EQTRNelV6T1ZvWERUSXdNRGt4Ck56QTRNelV6T1Zvd1VERUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjNZVEVVTUJJR0ExVUUKQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEN6QUpCZ05WQkFNTUFtTmhNRmt3RXdZSApLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFNWNKWTdqeTAwbjJQbTdzYTF1eFY5bTM5U3RkRzBrVzBqZHhrCnlscGJrM2xWUXlKRlZBeVZlZ0tBSGt3aWF0eG54dWFPMElJN2pyMzhVWEdnSG85REI2TS9NRDB3SFFZRFZSME8KQkJZRUZIM204TFUrSW9VL2o1ZG9UeXhkNFFGVGlFNWxNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdDd1lEVlIwUApCQVFEQWdFR01Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lFWlV1dnY1WDFoT0Zoa2h6UVJVNkJDeURiQ0tnZFp3CnZINnZuOUphVHdqRkFpRUF0VW10bEFQYnh3RkdKV044WENQNzh2NTBnWWdOV1h0UkRwaXFRRzk5SW9BPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDZURDQ0FoK2dBd0lCQWdJVUVzWTJyRXpaL3EvSElQdE4vZXBLRjB3NUlYVXdDZ1lJS29aSXpqMEVBd0l3ClVqRUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjNZVEVVTUJJR0ExVUVDZ3dMUldOc2FYQnoKWlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eERUQUxCZ05WQkFNTUJISnZiM1F3SGhjTk1Ua3dPVEU0TURnegpOVE01V2hjTk1qQXdPVEUzTURnek5UTTVXakJTTVFzd0NRWURWUVFHRXdKRFFURVBNQTBHQTFVRUJ3d0dUM1IwCllYZGhNUlF3RWdZRFZRUUtEQXRGWTJ4cGNITmxJRWx2VkRFTk1Bc0dBMVVFQ3d3RVNHOXViekVOTUFzR0ExVUUKQXd3RWNtOXZkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCTEpRUGdUdi91TWNKOHZKZDg0dQpLQWlESkI5ZEM4VFVUL0ttaW54TTRNMkpyTXN3a0pmMGt0eVdJQm8veVZEWnJIeUtHY0Zld1REZ0p2eE1zV2FpCjdVQ2pnZEl3Z2M4d0hRWURWUjBPQkJZRUZBYWlxY3VveEFuY3FIK2ZLNFh3NzFmeVkxV1RNSUdQQmdOVkhTTUUKZ1ljd2dZU0FGQWFpcWN1b3hBbmNxSCtmSzRYdzcxZnlZMVdUb1Zha1ZEQlNNUXN3Q1FZRFZRUUdFd0pEUVRFUApNQTBHQTFVRUJ3d0dUM1IwWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFClNHOXViekVOTUFzR0ExVUVBd3dFY205dmRJSVVFc1kyckV6Wi9xL0hJUHROL2VwS0YwdzVJWFV3RHdZRFZSMFQKQVFIL0JBVXdBd0VCL3pBTEJnTlZIUThFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdGRUMwbnNvRgpwaXhWcVVhc2dZc3MrRGFQMDNVaDQvR00wQW8wN0lyQWxhZ0NJRHhOY2wwRUwyWUtPSkY4N0t4L2haQ0JxckV4Clo1QjU0VlFudW94SHpIaTQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  adapter.credentials: dXNlcm5hbWU9bXF0dC1hZGFwdGVyQEhPTk8KcGFzc3dvcmQ9bXF0dC1zZWNyZXQK
---
# Source: eclipse-hono/templates/hono-service-auth/hono-service-auth-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hono-service-auth-conf
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: service-auth
type: Opaque
stringData:
  application.yml: |
    hono:
      app:
        maxInstances: 1
      auth:
        amqp:
          bindAddress: "0.0.0.0"
          keyPath: "/etc/hono/key.pem"
          certPath: "/etc/hono/cert.pem"
          trustStorePath: "/etc/hono/trusted-certs.pem"
          insecurePortBindAddress: "0.0.0.0"
          insecurePortEnabled: true
        svc:
          permissionsPath: "file:///etc/hono/permissions.json"
      healthCheck:
        port: 8088
        bindAddress: "0.0.0.0"
        keyPath: "/etc/hono/key.pem"
        certPath: "/etc/hono/cert.pem"
data:
  key.pem: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZ0ZlRWhlcHF1R0NmOXpYd3gKSTRnQVVsaGJVc3lzelk2MEFsaXkrbGI4Vm5laFJBTkNBQVJnQmg4MDg0K2xmNm05eG15aVQ2aEdsRWtZcnNZbApFdDBtS1VDajlORnlCR2xEUGRvUkpvbGZlTDRCY1o2OHJLUDJFN1JibTJUTVUxSW0rb3RMV2NGYwotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
  cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNNVENDQWRhZ0F3SUJBZ0lKQUlBemVRSXNueVhxTUFvR0NDcUdTTTQ5QkFNQ01GQXhDekFKQmdOVkJBWVQKQWtOQk1ROHdEUVlEVlFRSERBWlBkSFJoZDJFeEZEQVNCZ05WQkFvTUMwVmpiR2x3YzJVZ1NXOVVNUTB3Q3dZRApWUVFMREFSSWIyNXZNUXN3Q1FZRFZRUUREQUpqWVRBZUZ3MHhPVEE1TVRnd09ETTFOREJhRncweU1EQTVNVGN3Ck9ETTFOREJhTUZreEN6QUpCZ05WQkFZVEFrTkJNUTh3RFFZRFZRUUhEQVpQZEhSaGQyRXhGREFTQmdOVkJBb00KQzBWamJHbHdjMlVnU1c5VU1RMHdDd1lEVlFRTERBUkliMjV2TVJRd0VnWURWUVFEREF0aGRYUm9MWE5sY25abApjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCR0FHSHpUemo2Vi9xYjNHYktKUHFFYVVTUml1CnhpVVMzU1lwUUtQMDBYSUVhVU05MmhFbWlWOTR2Z0Z4bnJ5c28vWVR0RnViWk14VFVpYjZpMHRad1Z5amdZOHcKZ1l3d0hRWURWUjBPQkJZRUZPWCtqL1J2RzM3OWN4eS9NT29Wa1ovd1lvdTNNQXNHQTFVZER3UUVBd0lEcURBZApCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3UHdZRFZSMFJCRGd3Tm9JUmFHOXVieTF6ClpYSjJhV05sTFdGMWRHaUNGbWh2Ym04dGMyVnlkbWxqWlMxaGRYUm9MbWh2Ym0rQ0NXeHZZMkZzYUc5emREQUsKQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBckJHSGZSYXpIV21TZXhzZjZKbXpjK3kvNmRWZlZCV0grVllTV3kxWQpBZElDSVFEQThlMkNQY01UVzFTb2FCQk9weG96VXZzYmd4VGNzZzFIMW9qVE40a2pLZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIyRENDQVg2Z0F3SUJBZ0lKQUpjUWs4cnYvNVRmTUFvR0NDcUdTTTQ5QkFNQ01GSXhDekFKQmdOVkJBWVQKQWtOQk1ROHdEUVlEVlFRSERBWlBkSFJoZDJFeEZEQVNCZ05WQkFvTUMwVmpiR2x3YzJVZ1NXOVVNUTB3Q3dZRApWUVFMREFSSWIyNXZNUTB3Q3dZRFZRUUREQVJ5YjI5ME1CNFhEVEU1TURreE9EQTRNelV6T1ZvWERUSXdNRGt4Ck56QTRNelV6T1Zvd1VERUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjNZVEVVTUJJR0ExVUUKQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEN6QUpCZ05WQkFNTUFtTmhNRmt3RXdZSApLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFNWNKWTdqeTAwbjJQbTdzYTF1eFY5bTM5U3RkRzBrVzBqZHhrCnlscGJrM2xWUXlKRlZBeVZlZ0tBSGt3aWF0eG54dWFPMElJN2pyMzhVWEdnSG85REI2TS9NRDB3SFFZRFZSME8KQkJZRUZIM204TFUrSW9VL2o1ZG9UeXhkNFFGVGlFNWxNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdDd1lEVlIwUApCQVFEQWdFR01Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lFWlV1dnY1WDFoT0Zoa2h6UVJVNkJDeURiQ0tnZFp3CnZINnZuOUphVHdqRkFpRUF0VW10bEFQYnh3RkdKV044WENQNzh2NTBnWWdOV1h0UkRwaXFRRzk5SW9BPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  trusted-certs.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIyRENDQVg2Z0F3SUJBZ0lKQUpjUWs4cnYvNVRmTUFvR0NDcUdTTTQ5QkFNQ01GSXhDekFKQmdOVkJBWVQKQWtOQk1ROHdEUVlEVlFRSERBWlBkSFJoZDJFeEZEQVNCZ05WQkFvTUMwVmpiR2x3YzJVZ1NXOVVNUTB3Q3dZRApWUVFMREFSSWIyNXZNUTB3Q3dZRFZRUUREQVJ5YjI5ME1CNFhEVEU1TURreE9EQTRNelV6T1ZvWERUSXdNRGt4Ck56QTRNelV6T1Zvd1VERUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjNZVEVVTUJJR0ExVUUKQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEN6QUpCZ05WQkFNTUFtTmhNRmt3RXdZSApLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFNWNKWTdqeTAwbjJQbTdzYTF1eFY5bTM5U3RkRzBrVzBqZHhrCnlscGJrM2xWUXlKRlZBeVZlZ0tBSGt3aWF0eG54dWFPMElJN2pyMzhVWEdnSG85REI2TS9NRDB3SFFZRFZSME8KQkJZRUZIM204TFUrSW9VL2o1ZG9UeXhkNFFGVGlFNWxNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdDd1lEVlIwUApCQVFEQWdFR01Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lFWlV1dnY1WDFoT0Zoa2h6UVJVNkJDeURiQ0tnZFp3CnZINnZuOUphVHdqRkFpRUF0VW10bEFQYnh3RkdKV044WENQNzh2NTBnWWdOV1h0UkRwaXFRRzk5SW9BPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDZURDQ0FoK2dBd0lCQWdJVUVzWTJyRXpaL3EvSElQdE4vZXBLRjB3NUlYVXdDZ1lJS29aSXpqMEVBd0l3ClVqRUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjNZVEVVTUJJR0ExVUVDZ3dMUldOc2FYQnoKWlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eERUQUxCZ05WQkFNTUJISnZiM1F3SGhjTk1Ua3dPVEU0TURnegpOVE01V2hjTk1qQXdPVEUzTURnek5UTTVXakJTTVFzd0NRWURWUVFHRXdKRFFURVBNQTBHQTFVRUJ3d0dUM1IwCllYZGhNUlF3RWdZRFZRUUtEQXRGWTJ4cGNITmxJRWx2VkRFTk1Bc0dBMVVFQ3d3RVNHOXViekVOTUFzR0ExVUUKQXd3RWNtOXZkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCTEpRUGdUdi91TWNKOHZKZDg0dQpLQWlESkI5ZEM4VFVUL0ttaW54TTRNMkpyTXN3a0pmMGt0eVdJQm8veVZEWnJIeUtHY0Zld1REZ0p2eE1zV2FpCjdVQ2pnZEl3Z2M4d0hRWURWUjBPQkJZRUZBYWlxY3VveEFuY3FIK2ZLNFh3NzFmeVkxV1RNSUdQQmdOVkhTTUUKZ1ljd2dZU0FGQWFpcWN1b3hBbmNxSCtmSzRYdzcxZnlZMVdUb1Zha1ZEQlNNUXN3Q1FZRFZRUUdFd0pEUVRFUApNQTBHQTFVRUJ3d0dUM1IwWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFClNHOXViekVOTUFzR0ExVUVBd3dFY205dmRJSVVFc1kyckV6Wi9xL0hJUHROL2VwS0YwdzVJWFV3RHdZRFZSMFQKQVFIL0JBVXdBd0VCL3pBTEJnTlZIUThFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdGRUMwbnNvRgpwaXhWcVVhc2dZc3MrRGFQMDNVaDQvR00wQW8wN0lyQWxhZ0NJRHhOY2wwRUwyWUtPSkY4N0t4L2haQ0JxckV4Clo1QjU0VlFudW94SHpIaTQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  permissions.json: ewogICJyb2xlcyI6IHsKICAgICJwcm90b2NvbC1hZGFwdGVyIjogWwogICAgICB7CiAgICAgICAgInJlc291cmNlIjogInRlbGVtZXRyeS8qIiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIldSSVRFIiBdCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAicmVzb3VyY2UiOiAiZXZlbnQvKiIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJXUklURSIgXQogICAgICB9LAogICAgICB7CiAgICAgICAgInJlc291cmNlIjogInJlZ2lzdHJhdGlvbi8qIiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIlJFQUQiLCAiV1JJVEUiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJvcGVyYXRpb24iOiAicmVnaXN0cmF0aW9uLyo6YXNzZXJ0IiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIkVYRUNVVEUiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJvcGVyYXRpb24iOiAicmVnaXN0cmF0aW9uLyo6Z2V0IiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIkVYRUNVVEUiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJyZXNvdXJjZSI6ICJjcmVkZW50aWFscy8qIiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIlJFQUQiLCAiV1JJVEUiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJvcGVyYXRpb24iOiAiY3JlZGVudGlhbHMvKjpnZXQiLAogICAgICAgICJhY3Rpdml0aWVzIjogWyAiRVhFQ1VURSIgXQogICAgICB9LAogICAgICB7CiAgICAgICAgInJlc291cmNlIjogInRlbmFudCIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJSRUFEIiwgIldSSVRFIiBdCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAib3BlcmF0aW9uIjogInRlbmFudC8qOioiLAogICAgICAgICJhY3Rpdml0aWVzIjogWyAiRVhFQ1VURSIgXQogICAgICB9LAogICAgICB7CiAgICAgICAgInJlc291cmNlIjogImRldmljZV9jb24vKiIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJSRUFEIiwgIldSSVRFIiBdCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAib3BlcmF0aW9uIjogImRldmljZV9jb24vKjoqIiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIkVYRUNVVEUiIF0KICAgICAgfQogICAgXSwKICAgICJkZXZpY2UtbWFuYWdlciI6IFsKICAgICAgewogICAgICAgICJyZXNvdXJjZSI6ICJyZWdpc3RyYXRpb24vKiIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJSRUFEIiwgIldSSVRFIiBdCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAib3BlcmF0aW9uIjogInJlZ2lzdHJhdGlvbi8qOioiLAogICAgICAgICJhY3Rpdml0aWVzIjogWyAiRVhFQ1VURSIgXQogICAgICB9CiAgICBdLAogICAgImFwcGxpY2F0aW9uIjogWwogICAgICB7CiAgICAgICAgInJlc291cmNlIjogInRlbGVtZXRyeS8qIiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIlJFQUQiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJyZXNvdXJjZSI6ICJldmVudC8qIiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIlJFQUQiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJyZXNvdXJjZSI6ICJjb250cm9sLyoiLAogICAgICAgICJhY3Rpdml0aWVzIjogWyAiUkVBRCIsICJXUklURSIgXQogICAgICB9LAogICAgICB7CiAgICAgICAgInJlc291cmNlIjogImNvbW1hbmQvKiIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJXUklURSIgXQogICAgICB9LAogICAgICB7CiAgICAgICAgInJlc291cmNlIjogImNvbW1hbmRfcmVzcG9uc2UvKiIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJSRUFEIiBdCiAgICAgIH0KICAgIF0KICB9LAogICJ1c2VycyI6IHsKICAgICJjb2FwLWFkYXB0ZXJASE9OTyI6IHsKICAgICAgIm1lY2hhbmlzbSI6ICJQTEFJTiIsCiAgICAgICJwYXNzd29yZCI6ICJjb2FwLXNlY3JldCIsCiAgICAgICJhdXRob3JpdGllcyI6IFsgImhvbm8tY29tcG9uZW50IiwgInByb3RvY29sLWFkYXB0ZXIiIF0KICAgIH0sCiAgICAiaHR0cC1hZGFwdGVyQEhPTk8iOiB7CiAgICAgICJtZWNoYW5pc20iOiAiUExBSU4iLAogICAgICAicGFzc3dvcmQiOiAiaHR0cC1zZWNyZXQiLAogICAgICAiYXV0aG9yaXRpZXMiOiBbICJob25vLWNvbXBvbmVudCIsICJwcm90b2NvbC1hZGFwdGVyIiBdCiAgICB9LAogICAgImxvcmEtYWRhcHRlckBIT05PIjogewogICAgICAibWVjaGFuaXNtIjogIlBMQUlOIiwKICAgICAgInBhc3N3b3JkIjogImxvcmEtc2VjcmV0IiwKICAgICAgImF1dGhvcml0aWVzIjogWyAiaG9uby1jb21wb25lbnQiLCAicHJvdG9jb2wtYWRhcHRlciIgXQogICAgfSwKICAgICJtcXR0LWFkYXB0ZXJASE9OTyI6IHsKICAgICAgIm1lY2hhbmlzbSI6ICJQTEFJTiIsCiAgICAgICJwYXNzd29yZCI6ICJtcXR0LXNlY3JldCIsCiAgICAgICJhdXRob3JpdGllcyI6IFsgImhvbm8tY29tcG9uZW50IiwgInByb3RvY29sLWFkYXB0ZXIiIF0KICAgIH0sCiAgICAiYW1xcC1hZGFwdGVyQEhPTk8iOiB7CiAgICAgICJtZWNoYW5pc20iOiAiUExBSU4iLAogICAgICAicGFzc3dvcmQiOiAiYW1xcC1zZWNyZXQiLAogICAgICAiYXV0aG9yaXRpZXMiOiBbICJob25vLWNvbXBvbmVudCIsICJwcm90b2NvbC1hZGFwdGVyIiBdCiAgICB9LAogICAgImt1cmEtYWRhcHRlckBIT05PIjogewogICAgICAibWVjaGFuaXNtIjogIlBMQUlOIiwKICAgICAgInBhc3N3b3JkIjogImt1cmEtc2VjcmV0IiwKICAgICAgImF1dGhvcml0aWVzIjogWyAiaG9uby1jb21wb25lbnQiLCAicHJvdG9jb2wtYWRhcHRlciIgXQogICAgfSwKICAgICJob25vLWNsaWVudEBIT05PIjogewogICAgICAibWVjaGFuaXNtIjogIlBMQUlOIiwKICAgICAgInBhc3N3b3JkIjogInNlY3JldCIsCiAgICAgICJhdXRob3JpdGllcyI6IFsgInByb3RvY29sLWFkYXB0ZXIiLCAiZGV2aWNlLW1hbmFnZXIiIF0KICAgIH0sCiAgICAiZGV2aWNlLXJlZ2lzdHJ5IjogewogICAgICAibWVjaGFuaXNtIjogIkVYVEVSTkFMIiwKICAgICAgImF1dGhvcml0aWVzIjogW10KICAgIH0sCiAgICAiY29uc3VtZXJASE9OTyI6IHsKICAgICAgIm1lY2hhbmlzbSI6ICJQTEFJTiIsCiAgICAgICJwYXNzd29yZCI6ICJ2ZXJ5c2VjcmV0IiwKICAgICAgImF1dGhvcml0aWVzIjogWyAiYXBwbGljYXRpb24iIF0KICAgIH0KICB9Cn0K
---
# Source: eclipse-hono/templates/hono-service-device-registry/hono-service-device-registry-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hono-service-device-registry-conf
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: service-device-registry
type: Opaque
stringData:
  example-device-identities.json: |
    [
      {
        "tenant": "DEFAULT_TENANT",
        "devices": [
          {
            "device-id": "4711",
            "data": {
              "enabled": true,
              "comment": [
                "messages published without a content type will get the default type defined below",
                "non-standard properties ('importance') will be added to the message's application-properties"
              ],
              "defaults": {
                "content-type": "application/vnd.bumlux",
                "importance": "high"
              }
            }
          },
          {
            "device-id": "4712",
            "data": {
              "enabled": true,
              "comment": ["this device connects only via the gateway indicated by the 'via' property","therefore, no credentials are registered for the device"],
              "via":"gw-1"
            }
          },
          {
            "device-id": "gw-1",
            "comment": "this device is authorized to publish data on behalf of device 4712",
            "data": {
              "enabled": true
            }
          }
        ]
      }
    ]
    
  example-credentials.json: |
    [
      {
        "tenant": "DEFAULT_TENANT",
        "credentials": [
          {
            "device-id": "4711",
            "type": "hashed-password",
            "auth-id": "sensor1",
            "enabled": true,
            "secrets": [
              {
                "not-before": "2017-05-01T14:00:00+01:00",
                "not-after": "2037-06-01T14:00:00+01:00",
                "hash-function": "bcrypt",
                "comment": "pwd: hono-secret",
                "pwd-hash": "$2a$10$N7UMjhZ2hYx.yuvW9WVXZ.4y33mr6MvnpAsZ8wgLHnkamH2tZ1jD."
              }
            ]
          },
          {
            "device-id": "gw-1",
            "type": "hashed-password",
            "auth-id": "gw",
            "enabled": true,
            "secrets": [
              {
                "not-before": "2018-01-01T00:00:00+01:00",
                "not-after": "2037-06-01T14:00:00+01:00",
                "hash-function": "bcrypt",
                "comment": "pwd: gw-secret",
                "pwd-hash": "$2a$10$GMcN0iV9gJV7L1sH6J82Xebc1C7CGJ..Rbs./vcTuTuxPEgS9DOa6"
              }
            ]
          },
          {
            "device-id" : "4711",
            "type" : "psk",
            "auth-id" : "sensor1",
            "enabled" : true,
            "secrets" : [
              {
                "not-before": "2018-01-01T00:00:00+01:00",
                "not-after": "2037-06-01T14:00:00+01:00",
                "comment": "coap preshared key: coap-secret",
                "key" : "Y29hcC1zZWNyZXQ="
              }
            ]
          },
          {
            "device-id": "4711",
            "type": "x509-cert",
            "auth-id": "CN=Device 4711,OU=Hono,O=Eclipse IoT,L=Ottawa,C=CA",
            "enabled": true,
            "secrets": [
              {
                "comment": "The secrets array must contain an object, which can be empty."
              }
            ]
          }
        ]
      }
    ]
    
  example-tenants.json: |
    [
      {
        "tenant-id": "DEFAULT_TENANT",
        "trusted-ca": {
          "subject-dn": "CN=DEFAULT_TENANT_CA,OU=Hono,O=Eclipse IoT,L=Ottawa,C=CA",
          "public-key": "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAElkwCSPlO563eQb6ONdULAISm2XngGGSoAAz+I1s8zkS9guPUpNKoxeczLtKlObelHqBgIZtRXdrPRgXidGOnmQ==",
          "algorithm": "EC"
        },
        "enabled": true
      },
      {
        "tenant-id": "HTTP_TENANT",
        "enabled": true,
        "adapters": [
          {
            "type": "hono-http",
            "enabled": true,
            "device-authentication-required": true
          },
          {
            "type": "hono-mqtt",
            "enabled": false,
            "device-authentication-required": true
          },
          {
            "type": "hono-kura",
            "enabled": false,
            "device-authentication-required": true
          },
          {
            "type": "hono-coap",
            "enabled": false,
            "device-authentication-required": true
          }
        ]
      }
    ]
    
  application.yml: |
    hono:
      app:
        maxInstances: 1
      auth:
        host: "hono-service-auth"
        port: 5671
        trustStorePath: "/etc/hono/trusted-certs.pem"
        hostnameVerificationRequired: false
        name: "Hono service-device-registry"
        validation:
          certPath: "/etc/hono/auth-server-cert.pem"
      registry:
        amqp:
          bindAddress: "0.0.0.0"
          keyPath: "/etc/hono/key.pem"
          certPath: "/etc/hono/cert.pem"
        rest:
          bindAddress: "0.0.0.0"
          keyPath: "/etc/hono/key.pem"
          certPath: "/etc/hono/cert.pem"
          insecurePortEnabled: true
          insecurePortBindAddress: "0.0.0.0"
        svc:
          filename: "/var/lib/hono/device-registry/device-identities.json"
          saveToFile: true
      credentials:
        svc:
          filename: "/var/lib/hono/device-registry/credentials.json"
          saveToFile: true
      tenant:
        svc:
          filename: "/var/lib/hono/device-registry/tenants.json"
          saveToFile: true
      healthCheck:
        port: 8088
        bindAddress: "0.0.0.0"
        keyPath: "/etc/hono/key.pem"
        certPath: "/etc/hono/cert.pem"
data:
  key.pem: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZzR0RE5nUFVWVDh4Y05kNGcKLzF0UEN1cXNEY0pzMHRwSXNzY1BWSGlncS8yaFJBTkNBQVNTbjRkL2o3dmhRTDNtUkkzazFDTkxFcFU2TFBNOQp5cGppMkRBWTdUL3d4Ukh6TnIxWlljZWU2S0UyRTZLU3VWdFA1cXJ2aDJuc2RROGxYWStuWFpKUQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
  cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNTakNDQWZDZ0F3SUJBZ0lKQUlBemVRSXNueVhyTUFvR0NDcUdTTTQ5QkFNQ01GQXhDekFKQmdOVkJBWVQKQWtOQk1ROHdEUVlEVlFRSERBWlBkSFJoZDJFeEZEQVNCZ05WQkFvTUMwVmpiR2x3YzJVZ1NXOVVNUTB3Q3dZRApWUVFMREFSSWIyNXZNUXN3Q1FZRFZRUUREQUpqWVRBZUZ3MHhPVEE1TVRnd09ETTFOREJhRncweU1EQTVNVGN3Ck9ETTFOREJhTUYweEN6QUpCZ05WQkFZVEFrTkJNUTh3RFFZRFZRUUhEQVpQZEhSaGQyRXhGREFTQmdOVkJBb00KQzBWamJHbHdjMlVnU1c5VU1RMHdDd1lEVlFRTERBUkliMjV2TVJnd0ZnWURWUVFEREE5a1pYWnBZMlV0Y21WbgphWE4wY25rd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTU240ZC9qN3ZoUUwzbVJJM2sxQ05MCkVwVTZMUE05eXBqaTJEQVk3VC93eFJIek5yMVpZY2VlNktFMkU2S1N1VnRQNXFydmgybnNkUThsWFkrblhaSlEKbzRHbE1JR2lNQjBHQTFVZERnUVdCQlNzWGU0eGZtL2xhbTFJQW5JaGxrVkk1V3lhT1RBTEJnTlZIUThFQkFNQwpBNmd3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01GVUdBMVVkRVFST01FeUNIR2h2CmJtOHRjMlZ5ZG1salpTMWtaWFpwWTJVdGNtVm5hWE4wY25tQ0lXaHZibTh0YzJWeWRtbGpaUzFrWlhacFkyVXQKY21WbmFYTjBjbmt1YUc5dWI0SUpiRzlqWVd4b2IzTjBNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUURyTVpraQoycTlLSGRMRUh3SExwaXp2T1V3Uzl6eHd2RW1nV1ZBejVTWHFFUUlnZjRzd0NoU2ZXMVJ0THJodThHcTlmczBmCk5kYS9pbFdDREZiTjNnOXZwemc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIyRENDQVg2Z0F3SUJBZ0lKQUpjUWs4cnYvNVRmTUFvR0NDcUdTTTQ5QkFNQ01GSXhDekFKQmdOVkJBWVQKQWtOQk1ROHdEUVlEVlFRSERBWlBkSFJoZDJFeEZEQVNCZ05WQkFvTUMwVmpiR2x3YzJVZ1NXOVVNUTB3Q3dZRApWUVFMREFSSWIyNXZNUTB3Q3dZRFZRUUREQVJ5YjI5ME1CNFhEVEU1TURreE9EQTRNelV6T1ZvWERUSXdNRGt4Ck56QTRNelV6T1Zvd1VERUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjNZVEVVTUJJR0ExVUUKQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEN6QUpCZ05WQkFNTUFtTmhNRmt3RXdZSApLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFNWNKWTdqeTAwbjJQbTdzYTF1eFY5bTM5U3RkRzBrVzBqZHhrCnlscGJrM2xWUXlKRlZBeVZlZ0tBSGt3aWF0eG54dWFPMElJN2pyMzhVWEdnSG85REI2TS9NRDB3SFFZRFZSME8KQkJZRUZIM204TFUrSW9VL2o1ZG9UeXhkNFFGVGlFNWxNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdDd1lEVlIwUApCQVFEQWdFR01Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lFWlV1dnY1WDFoT0Zoa2h6UVJVNkJDeURiQ0tnZFp3CnZINnZuOUphVHdqRkFpRUF0VW10bEFQYnh3RkdKV044WENQNzh2NTBnWWdOV1h0UkRwaXFRRzk5SW9BPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  trusted-certs.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIyRENDQVg2Z0F3SUJBZ0lKQUpjUWs4cnYvNVRmTUFvR0NDcUdTTTQ5QkFNQ01GSXhDekFKQmdOVkJBWVQKQWtOQk1ROHdEUVlEVlFRSERBWlBkSFJoZDJFeEZEQVNCZ05WQkFvTUMwVmpiR2x3YzJVZ1NXOVVNUTB3Q3dZRApWUVFMREFSSWIyNXZNUTB3Q3dZRFZRUUREQVJ5YjI5ME1CNFhEVEU1TURreE9EQTRNelV6T1ZvWERUSXdNRGt4Ck56QTRNelV6T1Zvd1VERUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjNZVEVVTUJJR0ExVUUKQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEN6QUpCZ05WQkFNTUFtTmhNRmt3RXdZSApLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFNWNKWTdqeTAwbjJQbTdzYTF1eFY5bTM5U3RkRzBrVzBqZHhrCnlscGJrM2xWUXlKRlZBeVZlZ0tBSGt3aWF0eG54dWFPMElJN2pyMzhVWEdnSG85REI2TS9NRDB3SFFZRFZSME8KQkJZRUZIM204TFUrSW9VL2o1ZG9UeXhkNFFGVGlFNWxNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdDd1lEVlIwUApCQVFEQWdFR01Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lFWlV1dnY1WDFoT0Zoa2h6UVJVNkJDeURiQ0tnZFp3CnZINnZuOUphVHdqRkFpRUF0VW10bEFQYnh3RkdKV044WENQNzh2NTBnWWdOV1h0UkRwaXFRRzk5SW9BPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDZURDQ0FoK2dBd0lCQWdJVUVzWTJyRXpaL3EvSElQdE4vZXBLRjB3NUlYVXdDZ1lJS29aSXpqMEVBd0l3ClVqRUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjNZVEVVTUJJR0ExVUVDZ3dMUldOc2FYQnoKWlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eERUQUxCZ05WQkFNTUJISnZiM1F3SGhjTk1Ua3dPVEU0TURnegpOVE01V2hjTk1qQXdPVEUzTURnek5UTTVXakJTTVFzd0NRWURWUVFHRXdKRFFURVBNQTBHQTFVRUJ3d0dUM1IwCllYZGhNUlF3RWdZRFZRUUtEQXRGWTJ4cGNITmxJRWx2VkRFTk1Bc0dBMVVFQ3d3RVNHOXViekVOTUFzR0ExVUUKQXd3RWNtOXZkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCTEpRUGdUdi91TWNKOHZKZDg0dQpLQWlESkI5ZEM4VFVUL0ttaW54TTRNMkpyTXN3a0pmMGt0eVdJQm8veVZEWnJIeUtHY0Zld1REZ0p2eE1zV2FpCjdVQ2pnZEl3Z2M4d0hRWURWUjBPQkJZRUZBYWlxY3VveEFuY3FIK2ZLNFh3NzFmeVkxV1RNSUdQQmdOVkhTTUUKZ1ljd2dZU0FGQWFpcWN1b3hBbmNxSCtmSzRYdzcxZnlZMVdUb1Zha1ZEQlNNUXN3Q1FZRFZRUUdFd0pEUVRFUApNQTBHQTFVRUJ3d0dUM1IwWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFClNHOXViekVOTUFzR0ExVUVBd3dFY205dmRJSVVFc1kyckV6Wi9xL0hJUHROL2VwS0YwdzVJWFV3RHdZRFZSMFQKQVFIL0JBVXdBd0VCL3pBTEJnTlZIUThFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdGRUMwbnNvRgpwaXhWcVVhc2dZc3MrRGFQMDNVaDQvR00wQW8wN0lyQWxhZ0NJRHhOY2wwRUwyWUtPSkY4N0t4L2haQ0JxckV4Clo1QjU0VlFudW94SHpIaTQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  auth-server-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNNVENDQWRhZ0F3SUJBZ0lKQUlBemVRSXNueVhxTUFvR0NDcUdTTTQ5QkFNQ01GQXhDekFKQmdOVkJBWVQKQWtOQk1ROHdEUVlEVlFRSERBWlBkSFJoZDJFeEZEQVNCZ05WQkFvTUMwVmpiR2x3YzJVZ1NXOVVNUTB3Q3dZRApWUVFMREFSSWIyNXZNUXN3Q1FZRFZRUUREQUpqWVRBZUZ3MHhPVEE1TVRnd09ETTFOREJhRncweU1EQTVNVGN3Ck9ETTFOREJhTUZreEN6QUpCZ05WQkFZVEFrTkJNUTh3RFFZRFZRUUhEQVpQZEhSaGQyRXhGREFTQmdOVkJBb00KQzBWamJHbHdjMlVnU1c5VU1RMHdDd1lEVlFRTERBUkliMjV2TVJRd0VnWURWUVFEREF0aGRYUm9MWE5sY25abApjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCR0FHSHpUemo2Vi9xYjNHYktKUHFFYVVTUml1CnhpVVMzU1lwUUtQMDBYSUVhVU05MmhFbWlWOTR2Z0Z4bnJ5c28vWVR0RnViWk14VFVpYjZpMHRad1Z5amdZOHcKZ1l3d0hRWURWUjBPQkJZRUZPWCtqL1J2RzM3OWN4eS9NT29Wa1ovd1lvdTNNQXNHQTFVZER3UUVBd0lEcURBZApCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3UHdZRFZSMFJCRGd3Tm9JUmFHOXVieTF6ClpYSjJhV05sTFdGMWRHaUNGbWh2Ym04dGMyVnlkbWxqWlMxaGRYUm9MbWh2Ym0rQ0NXeHZZMkZzYUc5emREQUsKQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBckJHSGZSYXpIV21TZXhzZjZKbXpjK3kvNmRWZlZCV0grVllTV3kxWQpBZElDSVFEQThlMkNQY01UVzFTb2FCQk9weG96VXZzYmd4VGNzZzFIMW9qVE40a2pLZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIyRENDQVg2Z0F3SUJBZ0lKQUpjUWs4cnYvNVRmTUFvR0NDcUdTTTQ5QkFNQ01GSXhDekFKQmdOVkJBWVQKQWtOQk1ROHdEUVlEVlFRSERBWlBkSFJoZDJFeEZEQVNCZ05WQkFvTUMwVmpiR2x3YzJVZ1NXOVVNUTB3Q3dZRApWUVFMREFSSWIyNXZNUTB3Q3dZRFZRUUREQVJ5YjI5ME1CNFhEVEU1TURreE9EQTRNelV6T1ZvWERUSXdNRGt4Ck56QTRNelV6T1Zvd1VERUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjNZVEVVTUJJR0ExVUUKQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEN6QUpCZ05WQkFNTUFtTmhNRmt3RXdZSApLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFNWNKWTdqeTAwbjJQbTdzYTF1eFY5bTM5U3RkRzBrVzBqZHhrCnlscGJrM2xWUXlKRlZBeVZlZ0tBSGt3aWF0eG54dWFPMElJN2pyMzhVWEdnSG85REI2TS9NRDB3SFFZRFZSME8KQkJZRUZIM204TFUrSW9VL2o1ZG9UeXhkNFFGVGlFNWxNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdDd1lEVlIwUApCQVFEQWdFR01Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lFWlV1dnY1WDFoT0Zoa2h6UVJVNkJDeURiQ0tnZFp3CnZINnZuOUphVHdqRkFpRUF0VW10bEFQYnh3RkdKV044WENQNzh2NTBnWWdOV1h0UkRwaXFRRzk5SW9BPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: eclipse-hono/charts/grafana/templates/configmap-dashboard-provider.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: grafana
    chart: grafana-3.7.3
    release: hono
    heritage: Tiller
  name: hono-grafana-config-dashboards
  namespace: hono
data:
  provider.yaml: |-
    apiVersion: 1
    providers:
    - name: 'sidecarProvider'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      options:
        path: /tmp/dashboards
---
# Source: eclipse-hono/charts/grafana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hono-grafana
  namespace: hono
  labels:
    app: grafana
    chart: grafana-3.7.3
    release: hono
    heritage: Tiller
data:
  grafana.ini: |
    [analytics]
    check_for_updates = true
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/data
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
---
# Source: eclipse-hono/charts/grafana/templates/tests/test-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hono-grafana-test
  labels:
    app: hono-grafana
    chart: "grafana-3.7.3"
    heritage: "Tiller"
    release: "hono"
data:
  run.sh: |-
    @test "Test Health" {
      url="http://hono-grafana/api/health"

      code=$(curl -s -o /dev/null -I -w "%{http_code}" $url)
      [ "$code" == "200" ]
    }
---
# Source: eclipse-hono/templates/grafana/grafana-dashboard-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hono-grafana-dashboards
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: dashboard
    grafana_dashboard: "1"
data:
  overview.json: |
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "links": [
        {
          "icon": "external link",
          "tags": [],
          "title": "Eclipse Hono™",
          "tooltip": "",
          "type": "link",
          "url": "https://eclipse.org/hono"
        },
        {
          "asDropdown": true,
          "icon": "external link",
          "tags": [],
          "title": "Dashboards",
          "type": "dashboards"
        }
      ],
      "panels": [
        {
          "content": "<div class=\"text-center dashboard-header\">\n  <span>Telemetry</span>\n</div>",
          "description": "",
          "gridPos": {
            "h": 2,
            "w": 8,
            "x": 0,
            "y": 0
          },
          "id": 8,
          "links": [],
          "mode": "html",
          "title": "",
          "transparent": true,
          "type": "text"
        },
        {
          "content": "<div class=\"text-center dashboard-header\">\n  <span>Events</span>\n</div>",
          "gridPos": {
            "h": 2,
            "w": 8,
            "x": 8,
            "y": 0
          },
          "id": 12,
          "links": [],
          "mode": "html",
          "title": "",
          "transparent": true,
          "type": "text"
        },
        {
          "content": "<div class=\"text-center dashboard-header\">\n  <span>Commands</span>\n</div>",
          "gridPos": {
            "h": 2,
            "w": 8,
            "x": 16,
            "y": 0
          },
          "id": 15,
          "links": [],
          "mode": "html",
          "title": "",
          "transparent": true,
          "type": "text"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "hono_metrics",
          "description": "average rate of telemetry messages received from devices",
          "fill": 1,
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 0,
            "y": 2
          },
          "id": 2,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": false,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [
            {
              "dashboard": "Message details",
              "includeVars": true,
              "keepTime": true,
              "params": "var-type=telemetry",
              "targetBlank": true,
              "title": "Message details",
              "type": "dashboard",
              "url": "/d/rcEOBABmk/message-details"
            }
          ],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "processed",
              "color": "#629e51",
              "zindex": -1
            },
            {
              "alias": "unprocessed",
              "color": "#bf1b00",
              "zindex": 1
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(irate(hono_messages_received_seconds_count{type=\"telemetry\",status=\"unprocessable\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "unprocessable",
              "refId": "C"
            },
            {
              "expr": "sum(irate(hono_messages_received_seconds_count{type=\"telemetry\",status=\"undeliverable\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "undeliverable",
              "refId": "B"
            },
            {
              "expr": "sum(irate(hono_messages_received_seconds_count{type=\"telemetry\",status=\"forwarded\"}[$__range]))",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "forwarded",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeShift": null,
          "title": "messages",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": false,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "none",
              "label": "messages/sec",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "hono_metrics",
          "description": "average rate of events received from devices",
          "fill": 1,
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 8,
            "y": 2
          },
          "id": 17,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": false,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [
            {
              "dashboard": "Message details",
              "includeVars": true,
              "keepTime": true,
              "params": "type=event",
              "targetBlank": true,
              "title": "Message details",
              "type": "dashboard",
              "url": "/d/rcEOBABmk/message-details"
            }
          ],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "processed",
              "color": "#629e51",
              "zindex": -1
            },
            {
              "alias": "unprocessed",
              "color": "#bf1b00",
              "zindex": 1
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(irate(hono_messages_received_seconds_count{type=\"event\",status=\"unprocessable\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "unprocessable",
              "refId": "C"
            },
            {
              "expr": "sum(irate(hono_messages_received_seconds_count{type=\"event\",status=\"undeliverable\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "undeliverable",
              "refId": "B"
            },
            {
              "expr": "sum(irate(hono_messages_received_seconds_count{type=\"event\",status=\"forwarded\"}[$__range]))",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "forwarded",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeShift": null,
          "title": "messages",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": false,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "none",
              "label": "messages/sec",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "hono_metrics",
          "description": "average rate of commands sent to devices",
          "fill": 1,
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 16,
            "y": 2
          },
          "id": 20,
          "legend": {
            "avg": false,
            "current": false,
            "hideEmpty": false,
            "hideZero": false,
            "max": false,
            "min": false,
            "show": false,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(irate(hono_commands_received_seconds_count{direction=~\"one-way|request\",status=\"unprocessable\"}[$__range]))",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "unprocessable",
              "refId": "C"
            },
            {
              "expr": "sum(irate(hono_commands_received_seconds_count{direction=~\"one-way|request\",status=\"undeliverable\"}[$__range]))",
              "format": "time_series",
              "hide": false,
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "undeliverable",
              "refId": "B"
            },
            {
              "expr": "sum(irate(hono_commands_received_seconds_count{direction=~\"one-way|request\",status=\"forwarded\"}[$__range]))",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "forwarded",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeShift": null,
          "title": "messages",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": false,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "none",
              "label": "messages/sec",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "decimals": 1,
              "format": "none",
              "label": "bytes/sec",
              "logBase": 10,
              "max": null,
              "min": "0",
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "hono_metrics",
          "description": "average rate of data received from devices as payload of telemetry messages",
          "fill": 1,
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 0,
            "y": 10
          },
          "id": 55,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": false,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(irate(hono_messages_payload_bytes_sum{type=\"telemetry\",status=\"unprocessable\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "unprocessable",
              "refId": "C"
            },
            {
              "expr": "sum(irate(hono_messages_payload_bytes_sum{type=\"telemetry\",status=\"undeliverable\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "undeliverable",
              "refId": "B"
            },
            {
              "expr": "sum(irate(hono_messages_payload_bytes_sum{type=\"telemetry\",status=\"forwarded\"}[$__range]))",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "forwarded",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeShift": null,
          "title": "payload",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": false,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "none",
              "label": "bytes/sec",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "hono_metrics",
          "description": "average rate of data received from devices as payload of events",
          "fill": 1,
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 8,
            "y": 10
          },
          "id": 59,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": false,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(irate(hono_messages_payload_bytes_sum{type=\"event\",status=\"unprocessable\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "unprocessable",
              "refId": "C"
            },
            {
              "expr": "sum(irate(hono_messages_payload_bytes_sum{type=\"event\",status=\"undeliverable\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "undeliverable",
              "refId": "B"
            },
            {
              "expr": "sum(irate(hono_messages_payload_bytes_sum{type=\"event\",status=\"forwarded\"}[$__range]))",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "forwarded",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeShift": null,
          "title": "payload",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": false,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "none",
              "label": "bytes/sec",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "hono_metrics",
          "description": "average rate of data sent to devices as payload of commands",
          "fill": 1,
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 16,
            "y": 10
          },
          "id": 60,
          "legend": {
            "alignAsTable": false,
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(irate(hono_commands_payload_bytes_sum{direction=~\"one-way|request\",status=\"unprocessable\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "unprocessable",
              "refId": "C"
            },
            {
              "expr": "sum(irate(hono_commands_payload_bytes_sum{direction=~\"one-way|request\",status=\"undeliverable\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "undeliverable",
              "refId": "B"
            },
            {
              "expr": "sum(irate(hono_commands_payload_bytes_sum{direction=~\"one-way|request\",status=\"forwarded\"}[$__range]))",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "forwarded",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeShift": null,
          "title": "payload",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": false,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "none",
              "label": "bytes/sec",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "hono_metrics",
          "description": "average rate of valid telemetry messages received from devices which could not be delivered downstream",
          "fill": 1,
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 0,
            "y": 18
          },
          "id": 61,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": false,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "(100 * sum(irate(hono_messages_received_seconds_count{type=\"telemetry\",qos=\"0\",status=\"undeliverable\"}[$__range])))\n/\nsum(irate(hono_messages_received_seconds_count{type=\"telemetry\",qos=\"0\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "QoS 0",
              "refId": "C"
            },
            {
              "expr": "(100 * sum(irate(hono_messages_received_seconds_count{type=\"telemetry\",qos=\"1\",status=\"undeliverable\"}[$__range])))\n/\nsum(irate(hono_messages_received_seconds_count{type=\"telemetry\",qos=\"1\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "QoS 1",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "colorMode": "warning",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 5,
              "yaxis": "left"
            },
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 15,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "undeliverable rate",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": false,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "none",
              "label": "percent",
              "logBase": 10,
              "max": "100",
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "hono_metrics",
          "description": "average rate of valid events received from devices which could not be delivered downstream",
          "fill": 1,
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 8,
            "y": 18
          },
          "id": 62,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": false,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "(100 * sum(irate(hono_messages_received_seconds_count{type=\"event\",status=\"undeliverable\"}[$__range])))\n/\nsum(irate(hono_messages_received_seconds_count{type=\"event\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "not forwarded",
              "refId": "C"
            }
          ],
          "thresholds": [
            {
              "colorMode": "warning",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 1,
              "yaxis": "left"
            },
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 5,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "undeliverable rate",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": false,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "none",
              "label": "percent",
              "logBase": 10,
              "max": "100",
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "hono_metrics",
          "description": "average rate of valid commands received from applications which could not be delivered to devices",
          "fill": 1,
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 16,
            "y": 18
          },
          "id": 63,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": false,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "(100 * sum(irate(hono_commands_received_seconds_count{direction=~\"one-way|request\",status=\"undeliverable\"}[$__range])))\n/\nsum(irate(hono_commands_received_seconds_count{direction=\"one-way|request\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "not forwarded",
              "refId": "C"
            }
          ],
          "thresholds": [
            {
              "colorMode": "warning",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 5,
              "yaxis": "left"
            },
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 15,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "undeliverable rate",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": false,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "none",
              "label": "percent",
              "logBase": 10,
              "max": "100",
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "columns": [],
          "datasource": "hono_metrics",
          "description": "The number of containers running for each service.",
          "fontSize": "100%",
          "gridPos": {
            "h": 5,
            "w": 8,
            "x": 0,
            "y": 26
          },
          "id": 65,
          "links": [],
          "pageSize": null,
          "scroll": true,
          "showHeader": true,
          "sort": {
            "col": 1,
            "desc": true
          },
          "styles": [
            {
              "alias": "Service",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 2,
              "mappingType": 1,
              "pattern": "job",
              "thresholds": [],
              "type": "string",
              "unit": "short"
            },
            {
              "alias": "Count",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "decimals": 0,
              "pattern": "Value",
              "thresholds": [],
              "type": "number",
              "unit": "short"
            },
            {
              "alias": "",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 2,
              "mappingType": 1,
              "pattern": "Time",
              "thresholds": [],
              "type": "date",
              "unit": "short"
            }
          ],
          "targets": [
            {
              "expr": "sum(up) by (job)",
              "format": "table",
              "instant": true,
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "title": "Service Instances",
          "transform": "table",
          "type": "table"
        }
      ],
      "refresh": "10s",
      "schemaVersion": 16,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-5m",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "5s",
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "browser",
      "title": "Overview",
      "uid": "QpiDB0Bmz",
      "version": 1
    }
    
  message-details.json: |
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "iteration": 1549025382653,
      "links": [],
      "panels": [
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "hono_metrics",
          "fill": 1,
          "gridPos": {
            "h": 6,
            "w": 20,
            "x": 0,
            "y": 0
          },
          "id": 2,
          "legend": {
            "alignAsTable": false,
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(irate(hono_messages_received_seconds_count{status=\"forwarded\",component_name=~\"$componentname\",type=~\"$type\",tenant=~\"$tenant\",host=~\"$instance\"}[$__range]))",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "forwarded",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeShift": null,
          "title": "Succeeded",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "ops",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#299c46",
            "rgba(237, 129, 40, 0.89)",
            "#d44a3a"
          ],
          "datasource": "hono_metrics",
          "format": "ops",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 2,
            "w": 4,
            "x": 20,
            "y": 0
          },
          "id": 8,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(rate(hono_messages_received_seconds_count{status=\"forwarded\",component_name=~\"$componentname\",type=~\"$type\",tenant=~\"$tenant\",host=~\"$instance\"}[$__interval]))",
              "format": "time_series",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "",
          "timeFrom": "1m",
          "title": "avg",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "0",
              "value": "null"
            }
          ],
          "valueName": "avg"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#299c46",
            "rgba(237, 129, 40, 0.89)",
            "#d44a3a"
          ],
          "datasource": "hono_metrics",
          "format": "ops",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 2,
            "w": 4,
            "x": 20,
            "y": 2
          },
          "id": 9,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(rate(hono_messages_received_seconds_count{status=\"forwarded\",component_name=~\"$componentname\",type=~\"$type\",tenant=~\"$tenant\",host=~\"$instance\"}[$__interval]))",
              "format": "time_series",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "",
          "timeFrom": "5m",
          "title": "avg",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "0",
              "value": "null"
            }
          ],
          "valueName": "avg"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#299c46",
            "rgba(237, 129, 40, 0.89)",
            "#d44a3a"
          ],
          "datasource": "hono_metrics",
          "format": "ops",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 2,
            "w": 4,
            "x": 20,
            "y": 4
          },
          "id": 10,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(rate(hono_messages_received_seconds_count{status=\"forwarded\",component_name=~\"$componentname\",type=~\"$type\",tenant=~\"$tenant\",host=~\"$instance\"}[$__interval]))",
              "format": "time_series",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "",
          "timeFrom": "15m",
          "title": "avg",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "0",
              "value": "null"
            }
          ],
          "valueName": "avg"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "hono_metrics",
          "fill": 1,
          "gridPos": {
            "h": 6,
            "w": 20,
            "x": 0,
            "y": 6
          },
          "id": 3,
          "legend": {
            "alignAsTable": false,
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(irate(hono_messages_payload_bytes_sum{component_name=~\"$componentname\",type=~\"$type\",status=\"forwarded\",tenant=~\"$tenant\",host=~\"$instance\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "forwarded",
              "refId": "A"
            },
            {
              "expr": "sum(irate(hono_messages_payload_bytes_sum{component_name=~\"$componentname\",type=~\"$type\",status=\"undeliverable\",tenant=~\"$tenant\",host=~\"$instance\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "undeliverable",
              "refId": "B"
            },
            {
              "expr": "sum(irate(hono_messages_payload_bytes_sum{component_name=~\"$componentname\",type=~\"$type\",status=\"unprocessable\",tenant=~\"$tenant\",host=~\"$instance\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "unprocessable",
              "refId": "C"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeShift": null,
          "title": "Payload",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "Bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#299c46",
            "rgba(237, 129, 40, 0.89)",
            "#d44a3a"
          ],
          "datasource": "hono_metrics",
          "format": "Bps",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 2,
            "w": 4,
            "x": 20,
            "y": 6
          },
          "id": 11,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(rate(hono_messages_payload_bytes_sum{component_name=~\"$componentname\",type=~\"$type\",tenant=~\"$tenant\",host=~\"$instance\"}[$__interval]))",
              "format": "time_series",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "",
          "timeFrom": "1m",
          "title": "avg",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "0",
              "value": "null"
            }
          ],
          "valueName": "avg"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#299c46",
            "rgba(237, 129, 40, 0.89)",
            "#d44a3a"
          ],
          "datasource": "hono_metrics",
          "format": "Bps",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 2,
            "w": 4,
            "x": 20,
            "y": 8
          },
          "id": 12,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(rate(hono_messages_payload_bytes_sum{component_name=~\"$componentname\",type=~\"$type\",tenant=~\"$tenant\",host=~\"$instance\"}[$__interval]))",
              "format": "time_series",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "",
          "timeFrom": "5m",
          "title": "avg",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "0",
              "value": "null"
            }
          ],
          "valueName": "avg"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#299c46",
            "rgba(237, 129, 40, 0.89)",
            "#d44a3a"
          ],
          "datasource": "hono_metrics",
          "format": "Bps",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 2,
            "w": 4,
            "x": 20,
            "y": 10
          },
          "id": 13,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(rate(hono_messages_payload_bytes_sum{component_name=~\"$componentname\",type=~\"$type\",tenant=~\"$tenant\",host=~\"$instance\"}[$__interval]))",
              "format": "time_series",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "",
          "timeFrom": "15m",
          "title": "avg",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "0",
              "value": "null"
            }
          ],
          "valueName": "avg"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "hono_metrics",
          "fill": 1,
          "gridPos": {
            "h": 6,
            "w": 20,
            "x": 0,
            "y": 12
          },
          "id": 4,
          "legend": {
            "alignAsTable": false,
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(irate(hono_messages_received_seconds_count{component_name=~\"$componentname\",type=~\"$type\",status=\"undeliverable\",tenant=~\"$tenant\",host=~\"$instance\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "undeliverable",
              "refId": "A"
            },
            {
              "expr": "sum(irate(hono_messages_received_seconds_count{component_name=~\"$componentname\",type=~\"$type\",status=\"unprocessable\",tenant=~\"$tenant\",host=~\"$instance\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "unprocessable",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeShift": null,
          "title": "Failed",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "ops",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": true,
          "colors": [
            "#299c46",
            "#e5ac0e",
            "#d44a3a"
          ],
          "datasource": "hono_metrics",
          "decimals": 0,
          "format": "percent",
          "gauge": {
            "maxValue": 30,
            "minValue": 0,
            "show": true,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 6,
            "w": 4,
            "x": 20,
            "y": 12
          },
          "id": 6,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "(sum(rate(hono_messages_received_seconds_count{component_name=~\"$componentname\",type=~\"$type\",status!=\"forwarded\",tenant=~\"$tenant\",host=~\"$instance\"}[$__interval]))\n/\n sum(rate(hono_messages_received_seconds_count{component_name=~\"$componentname\",type=~\"$type\",tenant=~\"$tenant\",host=~\"$instance\"}[$__interval])))\n* 100\n",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "thresholds": "5,15",
          "title": "Failure Rate",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "0%",
              "value": "null"
            }
          ],
          "valueName": "avg"
        }
      ],
      "refresh": "10s",
      "schemaVersion": 16,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": [
          {
            "allValue": null,
            "current": {
              "text": "All",
              "value": [
                "$__all"
              ]
            },
            "datasource": "hono_metrics",
            "hide": 0,
            "includeAll": true,
            "label": "Adapter",
            "multi": true,
            "name": "componentname",
            "options": [],
            "query": "label_values(hono_messages_received_seconds_count,component_name)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "current": {
              "text": "",
              "value": ""
            },
            "hide": 0,
            "label": "Tenant",
            "name": "tenant",
            "options": [
              {
                "text": ".+",
                "value": ".+"
              }
            ],
            "query": ".+",
            "skipUrlSync": false,
            "type": "textbox"
          },
          {
            "allValue": null,
            "current": {
              "tags": [],
              "text": "All",
              "value": [
                "$__all"
              ]
            },
            "datasource": "hono_metrics",
            "hide": 0,
            "includeAll": true,
            "label": "Type",
            "multi": true,
            "name": "type",
            "options": [],
            "query": "label_values(hono_messages_received_seconds_count,type)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {
              "text": "All",
              "value": [
                "$__all"
              ]
            },
            "datasource": "hono_metrics",
            "hide": 0,
            "includeAll": true,
            "label": "Instance",
            "multi": true,
            "name": "instance",
            "options": [],
            "query": "label_values(hono_messages_received_seconds_count,host)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          }
        ]
      },
      "time": {
        "from": "now-30m",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "5s",
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "",
      "title": "Message details",
      "uid": "rcEOBABmk",
      "version": 1
    }
    
  jvm-details.json: |
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "iteration": 1543834182381,
      "links": [],
      "panels": [
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 94,
          "panels": [],
          "title": "Memory",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "hono_metrics",
          "fill": 1,
          "gridPos": {
            "h": 8,
            "w": 11,
            "x": 0,
            "y": 1
          },
          "id": 74,
          "legend": {
            "avg": false,
            "current": false,
            "hideEmpty": false,
            "hideZero": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "used"
            },
            {
              "alias": "max",
              "color": "#ffffff",
              "fill": 0,
              "linewidth": 3
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(jvm_memory_used_bytes{host=~\"$instance\"})",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "used",
              "refId": "A"
            },
            {
              "expr": "sum(jvm_memory_max_bytes{host=~\"$instance\"})",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "max",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeShift": null,
          "title": "JVM memory",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#299c46",
            "rgba(237, 129, 40, 0.89)",
            "#d44a3a"
          ],
          "datasource": "hono_metrics",
          "decimals": 0,
          "format": "percentunit",
          "gauge": {
            "maxValue": 1,
            "minValue": 0,
            "show": true,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 8,
            "w": 3,
            "x": 11,
            "y": 1
          },
          "hideTimeOverride": true,
          "id": 75,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(jvm_memory_used_bytes{host=~\"$instance\"})\n/\nsum(jvm_memory_max_bytes{host=~\"$instance\"})",
              "format": "time_series",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": ".7,.9",
          "timeFrom": null,
          "timeShift": null,
          "title": "JVM memory usage",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "avg"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "hono_metrics",
          "fill": 1,
          "gridPos": {
            "h": 8,
            "w": 10,
            "x": 14,
            "y": 1
          },
          "id": 83,
          "legend": {
            "avg": false,
            "current": false,
            "hideEmpty": false,
            "hideZero": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/Allocated.*/",
              "yaxis": 2
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(jvm_gc_pause_seconds_sum{host=~\"$instance\"}[$__interval]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "GC Pause - {{host}}",
              "refId": "A"
            },
            {
              "expr": "rate(jvm_gc_memory_promoted_bytes_total{host=~\"$instance\"}[$__interval])",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "Allocated - {{host}}",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeShift": null,
          "title": "JVM GC",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "s",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "bytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 9
          },
          "id": 96,
          "panels": [],
          "title": "CPU",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "hono_metrics",
          "fill": 1,
          "gridPos": {
            "h": 9,
            "w": 11,
            "x": 0,
            "y": 10
          },
          "id": 80,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": false,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "process_cpu_usage{host=~\"$instance\"}",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "process - {{host}}",
              "refId": "A"
            },
            {
              "expr": "system_cpu_usage{host=~\"$instance\"}",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "system - {{host}}",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeShift": null,
          "title": "CPU usage",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "percentunit",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#299c46",
            "rgba(237, 129, 40, 0.89)",
            "#d44a3a"
          ],
          "datasource": "hono_metrics",
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 3,
            "x": 11,
            "y": 10
          },
          "id": 82,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(system_cpu_count{host=~\"$instance\"})",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "thresholds": "",
          "title": "CPUs",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "avg"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "hono_metrics",
          "fill": 1,
          "gridPos": {
            "h": 9,
            "w": 10,
            "x": 14,
            "y": 10
          },
          "id": 86,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": false,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "process_files_open_files{host=~\"$instance\"}",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "open files - {{host}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeShift": null,
          "title": "Open Files",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#299c46",
            "rgba(237, 129, 40, 0.89)",
            "#d44a3a"
          ],
          "datasource": "hono_metrics",
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 3,
            "x": 11,
            "y": 13
          },
          "id": 78,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(jvm_threads_live_threads{host=~\"$instance\"})",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "thresholds": "",
          "title": "Threads",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "avg"
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 19
          },
          "id": 92,
          "panels": [],
          "title": "Logs",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "hono_metrics",
          "fill": 1,
          "gridPos": {
            "h": 8,
            "w": 11,
            "x": 0,
            "y": 20
          },
          "id": 84,
          "legend": {
            "avg": false,
            "current": false,
            "hideEmpty": false,
            "hideZero": false,
            "max": false,
            "min": false,
            "show": false,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "trace",
              "color": "#cffaff",
              "zindex": -3
            },
            {
              "alias": "debug",
              "color": "#65c5db",
              "zindex": -2
            },
            {
              "alias": "info",
              "color": "#f4d598",
              "zindex": -1
            },
            {
              "alias": "warn",
              "color": "#c15c17",
              "zindex": 0
            },
            {
              "alias": "error",
              "color": "#bf1b00",
              "zindex": 1
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "rate(logback_events_total{host=~\"$instance\"}[$__interval])",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{level}} - {{host}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeShift": null,
          "title": "logback",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "none",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "none",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#299c46",
            "rgba(237, 129, 40, 0.89)",
            "#d44a3a"
          ],
          "datasource": "hono_metrics",
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 2,
            "w": 3,
            "x": 11,
            "y": 20
          },
          "id": 87,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(increase(logback_events_total{level=~\"debug|trace\",host=~\"$instance\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "thresholds": "",
          "title": "Trace | Debug",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "avg"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#299c46",
            "rgba(237, 129, 40, 0.89)",
            "#d44a3a"
          ],
          "datasource": "hono_metrics",
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 2,
            "w": 3,
            "x": 11,
            "y": 22
          },
          "id": 88,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(increase(logback_events_total{level=\"info\",host=~\"$instance\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "thresholds": "",
          "title": "Info",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "avg"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#299c46",
            "rgba(237, 129, 40, 0.89)",
            "#d44a3a"
          ],
          "datasource": "hono_metrics",
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 2,
            "w": 3,
            "x": 11,
            "y": 24
          },
          "id": 89,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(increase(logback_events_total{level=\"warn\",host=~\"$instance\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "thresholds": "",
          "title": "Warning",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "avg"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#299c46",
            "rgba(237, 129, 40, 0.89)",
            "#d44a3a"
          ],
          "datasource": "hono_metrics",
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 2,
            "w": 3,
            "x": 11,
            "y": 26
          },
          "id": 90,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(increase(logback_events_total{level=\"error\",host=~\"$instance\"}[$__range]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "thresholds": "",
          "title": "Error",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "avg"
        }
      ],
      "refresh": "10s",
      "schemaVersion": 16,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": [
          {
            "allValue": null,
            "current": {
              "text": "All",
              "value": "$__all"
            },
            "datasource": "hono_metrics",
            "hide": 0,
            "includeAll": true,
            "label": null,
            "multi": false,
            "name": "instance",
            "options": [],
            "query": "label_values(jvm_threads_peak_threads,host)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          }
        ]
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "5s",
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "",
      "title": "JVM details",
      "uid": "9kSOf0fiz",
      "version": 1
    }
---
# Source: eclipse-hono/templates/prometheus/prometheus-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hono-prometheus-config
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: metrics
data:
  rules:
  alerts:
  prometheus.yml: |
    global:
      evaluation_interval: 1m
      scrape_interval: 10s
      scrape_timeout: 10s
      
    rule_files:
    - /etc/config/rules
    - /etc/config/alerts

    scrape_configs:
    
    - job_name: hono-service-auth
      metrics_path: /prometheus
      scheme: https
      tls_config:
        insecure_skip_verify: true
      dns_sd_configs:
      - names:
        - hono-service-auth-headless
        type: A
        port: 8088
        refresh_interval: 10s
    
    - job_name: hono-service-device-registry
      metrics_path: /prometheus
      scheme: https
      tls_config:
        insecure_skip_verify: true
      dns_sd_configs:
      - names:
        - hono-service-device-registry-headless
        type: A
        port: 8088
        refresh_interval: 10s
    
    - job_name: hono-adapter-amqp-vertx
      metrics_path: /prometheus
      scheme: https
      tls_config:
        insecure_skip_verify: true
      dns_sd_configs:
      - names:
        - hono-adapter-amqp-vertx-headless
        type: A
        port: 8088
        refresh_interval: 10s
    
    - job_name: hono-adapter-http-vertx
      metrics_path: /prometheus
      scheme: https
      tls_config:
        insecure_skip_verify: true
      dns_sd_configs:
      - names:
        - hono-adapter-http-vertx-headless
        type: A
        port: 8088
        refresh_interval: 10s
    
    - job_name: hono-adapter-mqtt-vertx
      metrics_path: /prometheus
      scheme: https
      tls_config:
        insecure_skip_verify: true
      dns_sd_configs:
      - names:
        - hono-adapter-mqtt-vertx-headless
        type: A
        port: 8088
        refresh_interval: 10s
---
# Source: eclipse-hono/charts/prometheus/templates/server-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    component: "server"
    app: prometheus
    release: hono
    chart: prometheus-8.15.1
    heritage: Tiller
  name: hono-prometheus-server
spec:
  accessModes:
    - ReadWriteOnce
    
  resources:
    requests:
      storage: "8Gi"
---
# Source: eclipse-hono/templates/hono-service-device-registry/hono-service-device-registry-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hono-service-device-registry
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: service-device-registry
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: "managed-premium-retain"
  resources:
    requests:
      storage: 1Mi
---
# Source: eclipse-hono/charts/grafana/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: grafana
    chart: grafana-3.7.3
    heritage: Tiller
    release: hono
  name: hono-grafana
  namespace: hono
---
# Source: eclipse-hono/charts/grafana/templates/tests/test-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: grafana
    chart: grafana-3.7.3
    heritage: Tiller
    release: hono
  name: hono-grafana-test
---
# Source: eclipse-hono/charts/prometheus/templates/server-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: "server"
    app: prometheus
    release: hono
    chart: prometheus-8.15.1
    heritage: Tiller
  name: hono-prometheus-server
---
# Source: eclipse-hono/charts/prometheus/templates/server-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    component: "server"
    app: prometheus
    release: hono
    chart: prometheus-8.15.1
    heritage: Tiller
  name: hono-prometheus-server
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
      - ingresses
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
    resources:
      - ingresses/status
      - ingresses
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - "/metrics"
    verbs:
      - get
---
# Source: eclipse-hono/charts/prometheus/templates/server-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    component: "server"
    app: prometheus
    release: hono
    chart: prometheus-8.15.1
    heritage: Tiller
  name: hono-prometheus-server
subjects:
  - kind: ServiceAccount
    name: hono-prometheus-server
    namespace: hono
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hono-prometheus-server
---
# Source: eclipse-hono/charts/grafana/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: hono-grafana
  namespace: hono
  labels:
    app: grafana
    chart: grafana-3.7.3
    heritage: Tiller
    release: hono
rules:
- apiGroups:      ['extensions']
  resources:      ['podsecuritypolicies']
  verbs:          ['use']
  resourceNames:  [hono-grafana]
- apiGroups: [""] # "" indicates the core API group
  resources: ["configmaps", "secrets"]
  verbs: ["get", "watch", "list"]
---
# Source: eclipse-hono/charts/grafana/templates/tests/test-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: hono-grafana-test
  labels:
    app: grafana
    chart: grafana-3.7.3
    heritage: Tiller
    release: hono
rules:
- apiGroups:      ['policy']
  resources:      ['podsecuritypolicies']
  verbs:          ['use']
  resourceNames:  [hono-grafana-test]
---
# Source: eclipse-hono/charts/grafana/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: hono-grafana
  namespace: hono
  labels:
    app: grafana
    chart: grafana-3.7.3
    heritage: Tiller
    release: hono
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hono-grafana
subjects:
- kind: ServiceAccount
  name: hono-grafana
  namespace: hono
roleRef:
  kind: Role
  name: hono-grafana
  apiGroup: rbac.authorization.k8s.io
---
# Source: eclipse-hono/charts/grafana/templates/tests/test-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hono-grafana-test
  labels:
    app: grafana
    chart: grafana-3.7.3
    heritage: Tiller
    release: hono
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hono-grafana-test
subjects:
- kind: ServiceAccount
  name: hono-grafana-test
  namespace: hono
---
# Source: eclipse-hono/charts/grafana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hono-grafana
  namespace: hono
  labels:
    app: grafana
    chart: grafana-3.7.3
    release: hono
    heritage: Tiller
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/name: eclipse-hono
    
spec:
  type: ClusterIP
  ports:
    - name: service
      port: 3000
      protocol: TCP
      targetPort: 3000

  selector:
    app: grafana
    release: hono
---
# Source: eclipse-hono/charts/prometheus/templates/server-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    component: "server"
    app: prometheus
    release: hono
    chart: prometheus-8.15.1
    heritage: Tiller
  name: hono-prometheus-server
spec:
  ports:
    - name: http
      port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    component: "server"
    app: prometheus
    release: hono
  type: "ClusterIP"
---
# Source: eclipse-hono/templates/hono-adapter-amqp/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: hono-adapter-amqp-vertx-headless
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: adapter-amqp-vertx
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: eclipse-hono
    app.kubernetes.io/instance: hono
    app.kubernetes.io/component: adapter-amqp-vertx
---
# Source: eclipse-hono/templates/hono-adapter-amqp/hono-adapter-amqp-vertx-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: hono-adapter-amqp-vertx
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: adapter-amqp-vertx
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-resource-group: hono
    
spec:
  ports:
  - name: amqp
    port: 5672
    protocol: TCP
    targetPort: amqp
    nodePort: 32672
  - name: amqps
    port: 5671
    protocol: TCP
    targetPort: amqps
    nodePort: 32671
  selector:
    app.kubernetes.io/name: eclipse-hono
    app.kubernetes.io/instance: hono
    app.kubernetes.io/component: adapter-amqp-vertx
  type: LoadBalancer
  loadBalancerIP: "40.118.0.228"
---
# Source: eclipse-hono/templates/hono-adapter-http/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: hono-adapter-http-vertx-headless
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: adapter-http-vertx
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: eclipse-hono
    app.kubernetes.io/instance: hono
    app.kubernetes.io/component: adapter-http-vertx
---
# Source: eclipse-hono/templates/hono-adapter-http/hono-adapter-http-vertx-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: hono-adapter-http-vertx
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: adapter-http-vertx
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-resource-group: hono
    
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: http
    nodePort: 30080
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
    nodePort: 30443
  selector:
    app.kubernetes.io/name: eclipse-hono
    app.kubernetes.io/instance: hono
    app.kubernetes.io/component: adapter-http-vertx
  type: LoadBalancer
  loadBalancerIP: "40.114.139.147"
---
# Source: eclipse-hono/templates/hono-adapter-mqtt/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: hono-adapter-mqtt-vertx-headless
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: adapter-mqtt-vertx
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: eclipse-hono
    app.kubernetes.io/instance: hono
    app.kubernetes.io/component: adapter-mqtt-vertx
---
# Source: eclipse-hono/templates/hono-adapter-mqtt/hono-adapter-mqtt-vertx-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: hono-adapter-mqtt-vertx
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: adapter-mqtt-vertx
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-resource-group: hono
    
spec:
  ports:
  - name: mqtt
    port: 1883
    protocol: TCP
    targetPort: mqtt
    nodePort: 31883
  - name: secure-mqtt
    port: 8883
    protocol: TCP
    targetPort: secure-mqtt
    nodePort: 30883
  selector:
    app.kubernetes.io/name: eclipse-hono
    app.kubernetes.io/instance: hono
    app.kubernetes.io/component: adapter-mqtt-vertx
  type: LoadBalancer
  loadBalancerIP: "40.114.223.12"
---
# Source: eclipse-hono/templates/hono-service-auth/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: hono-service-auth-headless
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: service-auth
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: eclipse-hono
    app.kubernetes.io/instance: hono
    app.kubernetes.io/component: service-auth
---
# Source: eclipse-hono/templates/hono-service-auth/hono-service-auth-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: hono-service-auth
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: service-auth
spec:
  ports:
  - name: amqps
    port: 5671
    protocol: TCP
    targetPort: amqps
  selector:
    app.kubernetes.io/name: eclipse-hono
    app.kubernetes.io/instance: hono
    app.kubernetes.io/component: service-auth
---
# Source: eclipse-hono/templates/hono-service-device-connection/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: hono-service-device-connection-headless
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: service-device-connection
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: eclipse-hono
    app.kubernetes.io/instance: hono
    app.kubernetes.io/component: service-device-connection
---
# Source: eclipse-hono/templates/hono-service-device-registry/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: hono-service-device-registry-headless
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: service-device-registry
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: eclipse-hono
    app.kubernetes.io/instance: hono
    app.kubernetes.io/component: service-device-registry
---
# Source: eclipse-hono/templates/hono-service-device-registry/hono-service-device-registry-ext-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: hono-service-device-registry-ext
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: service-device-registry
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-resource-group: hono
    
spec:
  ports:
  - name: http
    port: 28080
    protocol: TCP
    targetPort: http
    nodePort: 31080
  - name: https
    port: 28443
    protocol: TCP
    targetPort: https
    nodePort: 31443
  selector:
    app.kubernetes.io/name: eclipse-hono
    app.kubernetes.io/instance: hono
    app.kubernetes.io/component: service-device-registry
  type: LoadBalancer
  loadBalancerIP: "40.118.0.165"
---
# Source: eclipse-hono/templates/hono-service-device-registry/hono-service-device-registry-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: hono-service-device-registry
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: service-device-registry
spec:
  ports:
  - name: amqps
    port: 5671
    protocol: TCP
    targetPort: amqps
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/name: eclipse-hono
    app.kubernetes.io/instance: hono
    app.kubernetes.io/component: service-device-registry
---
# Source: eclipse-hono/charts/grafana/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: hono-grafana
  namespace: hono
  labels:
    app: grafana
    chart: grafana-3.7.3
    release: hono
    heritage: Tiller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
      release: hono
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
        release: hono
      annotations:
        checksum/config: b9a03c78edd1e067f1689ff6ac88bd449e1ae07dbc9b5c88cb0db5a6b00208e3
        checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/sc-dashboard-provider-config: 92d70d49a536b785c9dd682b6f5c393e53a77e7422fd4a9ee3bfe0cbb8eb4aad
        checksum/secret: 54aebe2dea5b5f6253e21d9f8853c09d4c778963286235620835bc0fbccd8500
    spec:
      serviceAccountName: hono-grafana
      securityContext:
        fsGroup: 472
        runAsUser: 472
        
      initContainers:
        - name: grafana-sc-datasources
          image: "kiwigrid/k8s-sidecar:0.0.18"
          imagePullPolicy: IfNotPresent
          env:
            - name: METHOD
              value: LIST
            - name: LABEL
              value: "grafana_datasource"
            - name: FOLDER
              value: "/etc/grafana/provisioning/datasources"
            - name: RESOURCE
              value: "both"
          resources:
            {}
            
          volumeMounts:
            - name: sc-datasources-volume
              mountPath: "/etc/grafana/provisioning/datasources"
      containers:
        - name: grafana-sc-dashboard
          image: "kiwigrid/k8s-sidecar:0.0.18"
          imagePullPolicy: IfNotPresent
          env:
            - name: LABEL
              value: "grafana_dashboard"
            - name: FOLDER
              value: "/tmp/dashboards"
            - name: RESOURCE
              value: "both"
          resources:
            {}
            
          volumeMounts:
            - name: sc-dashboard-volume
              mountPath: "/tmp/dashboards"
        - name: grafana
          image: "grafana/grafana:6.2.5"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: ldap
              mountPath: "/etc/grafana/ldap.toml"
              subPath: ldap.toml
            - name: storage
              mountPath: "/var/lib/grafana"
            - name: sc-dashboard-volume
              mountPath: "/tmp/dashboards"
            - name: sc-dashboard-provider
              mountPath: "/etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml"
              subPath: provider.yaml
            - name: sc-datasources-volume
              mountPath: "/etc/grafana/provisioning/datasources"
          ports:
            - name: service
              containerPort: 3000
              protocol: TCP
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: hono-grafana
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: hono-grafana
                  key: admin-password
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
            
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            
          resources:
            {}
            
      volumes:
        - name: config
          configMap:
            name: hono-grafana
        - name: ldap
          secret:
            secretName: hono-grafana
            items:
              - key: ldap-toml
                path: ldap.toml
        - name: storage
          emptyDir: {}
        - name: sc-dashboard-volume
          emptyDir: {}
        - name: sc-dashboard-provider
          configMap:
            name: hono-grafana-config-dashboards
        - name: sc-datasources-volume
          emptyDir: {}
---
# Source: eclipse-hono/charts/prometheus/templates/server-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    component: "server"
    app: prometheus
    release: hono
    chart: prometheus-8.15.1
    heritage: Tiller
  name: hono-prometheus-server
spec:
  selector:
    matchLabels:
      component: "server"
      app: prometheus
      release: hono
  replicas: 1
  template:
    metadata:
      labels:
        component: "server"
        app: prometheus
        release: hono
        chart: prometheus-8.15.1
        heritage: Tiller
    spec:
      serviceAccountName: hono-prometheus-server
      containers:
        - name: prometheus-server-configmap-reload
          image: "jimmidyson/configmap-reload:v0.2.2"
          imagePullPolicy: "IfNotPresent"
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://127.0.0.1:9090/-/reload
          resources:
            {}
            
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true

        - name: prometheus-server
          image: "prom/prometheus:v2.11.1"
          imagePullPolicy: "IfNotPresent"
          args:
            - --storage.tsdb.retention.time=15d
            - --config.file=/etc/config/prometheus.yml
            - --storage.tsdb.path=/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
            {}
            
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: /data
              subPath: ""
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config-volume
          configMap:
            name: hono-prometheus-config
        - name: storage-volume
          persistentVolumeClaim:
            claimName: hono-prometheus-server
---
# Source: eclipse-hono/templates/hono-adapter-amqp/hono-adapter-amqp-vertx-deployment.yaml
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: hono-adapter-amqp-vertx
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: adapter-amqp-vertx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: eclipse-hono
      app.kubernetes.io/instance: hono
      app.kubernetes.io/component: adapter-amqp-vertx
  template:
    metadata:
      name: hono-adapter-amqp-vertx
      labels:
        app.kubernetes.io/name: eclipse-hono
        helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/instance: hono
        app.kubernetes.io/version: 1.0.0-SNAPSHOT
        app.kubernetes.io/component: adapter-amqp-vertx
    spec:
      containers:      
      - image: kaisregistry.azurecr.io/eclipse/hono-adapter-amqp-vertx:1.0.0-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: eclipse-hono-adapter-amqp-vertx
        ports:
        - name: health
          containerPort: 8088
          protocol: TCP
        - name: amqps
          containerPort: 5671
          protocol: TCP
        - name: amqp
          containerPort: 5672
          protocol: TCP
        securityContext:
          privileged: false
        env:
        - name: SPRING_CONFIG_LOCATION
          value: file:///etc/hono/
        - name: SPRING_PROFILES_ACTIVE
          value: dev
        - name: LOGGING_CONFIG
          value: classpath:logback-spring.xml
        - name: _JAVA_OPTIONS
          value: "-XX:MinRAMPercentage=80 -XX:MaxRAMPercentage=80"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace        
        - name: JAEGER_SERVICE_NAME
          value: "hono-adapter-amqp-vertx"
        volumeMounts:        
        - name: "adapter-amqp-vertx-conf"
          mountPath: "/etc/hono"
          readOnly: true
        resources:
          limits:
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /liveness
            port: 8088
            scheme: HTTPS
          initialDelaySeconds: 180
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8088
            scheme: HTTPS
          initialDelaySeconds: 10
      volumes:      
      - name: "adapter-amqp-vertx-conf"
        secret:
          secretName: "hono-adapter-amqp-vertx-conf"
---
# Source: eclipse-hono/templates/hono-adapter-http/hono-adapter-http-vertx-deployment.yaml
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: hono-adapter-http-vertx
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: adapter-http-vertx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: eclipse-hono
      app.kubernetes.io/instance: hono
      app.kubernetes.io/component: adapter-http-vertx
  template:
    metadata:
      name: hono-adapter-http-vertx
      labels:
        app.kubernetes.io/name: eclipse-hono
        helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/instance: hono
        app.kubernetes.io/version: 1.0.0-SNAPSHOT
        app.kubernetes.io/component: adapter-http-vertx
    spec:
      containers:      
      - image: kaisregistry.azurecr.io/eclipse/hono-adapter-http-vertx:1.0.0-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: eclipse-hono-adapter-http-vertx
        ports:
        - name: health
          containerPort: 8088
          protocol: TCP
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: https
          containerPort: 8443
          protocol: TCP
        securityContext:
          privileged: false
        env:
        - name: SPRING_CONFIG_LOCATION
          value: file:///etc/hono/
        - name: SPRING_PROFILES_ACTIVE
          value: dev
        - name: LOGGING_CONFIG
          value: classpath:logback-spring.xml
        - name: _JAVA_OPTIONS
          value: "-XX:MinRAMPercentage=80 -XX:MaxRAMPercentage=80"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace        
        - name: JAEGER_SERVICE_NAME
          value: "hono-adapter-http-vertx"
        volumeMounts:        
        - name: "adapter-http-vertx-conf"
          mountPath: "/etc/hono"
          readOnly: true
        resources:
          limits:
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /liveness
            port: 8088
            scheme: HTTPS
          initialDelaySeconds: 180
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8088
            scheme: HTTPS
          initialDelaySeconds: 10
      volumes:      
      - name: "adapter-http-vertx-conf"
        secret:
          secretName: "hono-adapter-http-vertx-conf"
---
# Source: eclipse-hono/templates/hono-adapter-mqtt/hono-adapter-mqtt-vertx-deployment.yaml
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: hono-adapter-mqtt-vertx
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: adapter-mqtt-vertx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: eclipse-hono
      app.kubernetes.io/instance: hono
      app.kubernetes.io/component: adapter-mqtt-vertx
  template:
    metadata:
      name: hono-adapter-mqtt-vertx
      labels:
        app.kubernetes.io/name: eclipse-hono
        helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/instance: hono
        app.kubernetes.io/version: 1.0.0-SNAPSHOT
        app.kubernetes.io/component: adapter-mqtt-vertx
    spec:
      containers:      
      - image: kaisregistry.azurecr.io/eclipse/hono-adapter-mqtt-vertx:1.0.0-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: eclipse-hono-adapter-mqtt-vertx
        ports:
        - name: health
          containerPort: 8088
          protocol: TCP
        - name: mqtt
          containerPort: 1883
          protocol: TCP
        - name: secure-mqtt
          containerPort: 8883
          protocol: TCP
        securityContext:
          privileged: false
        env:
        - name: SPRING_CONFIG_LOCATION
          value: file:///etc/hono/
        - name: SPRING_PROFILES_ACTIVE
          value: dev
        - name: LOGGING_CONFIG
          value: classpath:logback-spring.xml
        - name: _JAVA_OPTIONS
          value: "-XX:MinRAMPercentage=80 -XX:MaxRAMPercentage=80"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace        
        - name: JAEGER_SERVICE_NAME
          value: "hono-adapter-mqtt-vertx"
        volumeMounts:        
        - name: "adapter-mqtt-vertx-conf"
          mountPath: "/etc/hono"
          readOnly: true
        resources:
          limits:
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /liveness
            port: 8088
            scheme: HTTPS
          initialDelaySeconds: 180
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8088
            scheme: HTTPS
          initialDelaySeconds: 10
      volumes:      
      - name: "adapter-mqtt-vertx-conf"
        secret:
          secretName: "hono-adapter-mqtt-vertx-conf"
---
# Source: eclipse-hono/templates/hono-service-auth/hono-service-auth-deployment.yaml
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: hono-service-auth
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: service-auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: eclipse-hono
      app.kubernetes.io/instance: hono
      app.kubernetes.io/component: service-auth
  template:
    metadata:
      name: hono-service-auth
      labels:
        app.kubernetes.io/name: eclipse-hono
        helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/instance: hono
        app.kubernetes.io/version: 1.0.0-SNAPSHOT
        app.kubernetes.io/component: service-auth
    spec:
      containers:
      - image: kaisregistry.azurecr.io/eclipse/hono-service-auth:1.0.0-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: eclipse-hono-service-auth
        ports:
        - name: health
          containerPort: 8088
          protocol: TCP
        - name: amqps
          containerPort: 5671
          protocol: TCP
        - name: amqp
          containerPort: 5672
          protocol: TCP
        securityContext:
          privileged: false
        env:
        - name: SPRING_CONFIG_LOCATION
          value: file:///etc/hono/
        - name: SPRING_PROFILES_ACTIVE
          value: authentication-impl,dev
        - name: LOGGING_CONFIG
          value: classpath:logback-spring.xml
        - name: _JAVA_OPTIONS
          value: "-XX:MinRAMPercentage=80 -XX:MaxRAMPercentage=80"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:        
        - name: "service-auth-conf"
          mountPath: "/etc/hono"
          readOnly: true
        resources:
          limits:
            memory: "196Mi"
        livenessProbe:
          httpGet:
            path: /liveness
            port: 8088
            scheme: HTTPS
          initialDelaySeconds: 180
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8088
            scheme: HTTPS
          initialDelaySeconds: 10
      volumes:      
      - name: "service-auth-conf"
        secret:
          secretName: "hono-service-auth-conf"
---
# Source: eclipse-hono/templates/hono-service-device-registry/hono-service-device-registry-deployment.yaml
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: hono-service-device-registry
  labels:
    app.kubernetes.io/name: eclipse-hono
    helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: hono
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/component: service-device-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: eclipse-hono
      app.kubernetes.io/instance: hono
      app.kubernetes.io/component: service-device-registry
  template:
    metadata:
      name: hono-service-device-registry
      labels:
        app.kubernetes.io/name: eclipse-hono
        helm.sh/chart: eclipse-hono-1.0.0-SNAPSHOT
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/instance: hono
        app.kubernetes.io/version: 1.0.0-SNAPSHOT
        app.kubernetes.io/component: service-device-registry
    spec:
      initContainers:
      # this container is used to copy example data from a secret to files
      # in a persistent volume
      - name: copy-example-data
        image: busybox
        command:
        - sh
        - -c
        - cp -u /tmp/hono/example-device-identities.json /var/lib/hono/device-registry/device-identities.json;
          cp -u /tmp/hono/example-credentials.json /var/lib/hono/device-registry/credentials.json;
          cp -u /tmp/hono/example-tenants.json /var/lib/hono/device-registry/tenants.json
        volumeMounts:
        - name: "service-device-registry-conf"
          mountPath: "/tmp/hono"
        - name: "registry"
          mountPath: "/var/lib/hono/device-registry"
      containers:      
      - image: kaisregistry.azurecr.io/eclipse/hono-service-device-registry:1.0.0-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: eclipse-hono-service-device-registry
        ports:
        - name: health
          containerPort: 8088
          protocol: TCP
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: https
          containerPort: 8443
          protocol: TCP
        - name: amqps
          containerPort: 5671
          protocol: TCP
        - name: amqp
          containerPort: 5672
          protocol: TCP
        env:
        - name: SPRING_CONFIG_LOCATION
          value: file:///etc/hono/
        - name: SPRING_PROFILES_ACTIVE
          value: dev
        - name: LOGGING_CONFIG
          value: classpath:logback-spring.xml
        - name: _JAVA_OPTIONS
          value: "-XX:MinRAMPercentage=80 -XX:MaxRAMPercentage=80"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace        
        - name: JAEGER_SERVICE_NAME
          value: "hono-service-device-registry"
        securityContext:
          privileged: false
        volumeMounts:        
        - name: "service-device-registry-conf"
          mountPath: "/etc/hono"
          readOnly: true
        - name: "registry"
          mountPath: "/var/lib/hono/device-registry"
        resources:
          limits:
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /liveness
            port: 8088
            scheme: HTTPS
          initialDelaySeconds: 180
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8088
            scheme: HTTPS
          initialDelaySeconds: 10
      volumes:      
      - name: "service-device-registry-conf"
        secret:
          secretName: "hono-service-device-registry-conf"
      - name: "registry"
        persistentVolumeClaim:
          claimName: "hono-service-device-registry"
Release "hono" has been upgraded.
LAST DEPLOYED: Tue Oct  1 12:31:08 2019
NAMESPACE: hono
STATUS: DEPLOYED

RESOURCES:
==> v1/ConfigMap
NAME                            DATA  AGE
hono-grafana                    1     4d12h
hono-grafana-config-dashboards  1     4d12h
hono-grafana-dashboards         3     4d12h
hono-grafana-test               1     4d12h
hono-prometheus-config          3     4d12h

==> v1/PersistentVolumeClaim
NAME                          STATUS  VOLUME                                    CAPACITY  ACCESS MODES  STORAGECLASS            AGE
hono-prometheus-server        Bound   pvc-6c90f8ea-e0a6-11e9-86e0-2274b039d244  8Gi       RWO           default                 4d12h
hono-service-device-registry  Bound   pvc-6c9614e4-e0a6-11e9-86e0-2274b039d244  1Gi       RWO           managed-premium-retain  4d12h

==> v1/Pod(related)
NAME                                      READY  STATUS   RESTARTS  AGE
hono-adapter-amqp-vertx-67867d8bbb-7f84l  0/1    Running  0         33m
hono-adapter-http-vertx-6cfbf9fbf4-f98ht  0/1    Running  0         33m
hono-adapter-mqtt-vertx-6c99b55ccc-skl9n  0/1    Running  0         33m
hono-grafana-8d5d6476f-4pjqz              2/2    Running  27        4d12h
hono-prometheus-server-5676c8f974-45wbl   2/2    Running  0         4d12h
hono-service-auth-56848bd545-4k59q        1/1    Running  0         33m
hono-service-device-registry-0            1/1    Running  44        4d12h

==> v1/Role
NAME               AGE
hono-grafana-test  4d12h

==> v1/RoleBinding
NAME               AGE
hono-grafana-test  4d12h

==> v1/Secret
NAME                               TYPE    DATA  AGE
hono-adapter-amqp-vertx-conf       Opaque  5     4d12h
hono-adapter-http-vertx-conf       Opaque  5     4d12h
hono-adapter-mqtt-vertx-conf       Opaque  5     4d12h
hono-grafana                       Opaque  3     4d12h
hono-grafana-datasources           Opaque  1     4d12h
hono-service-auth-conf             Opaque  5     4d12h
hono-service-device-registry-conf  Opaque  8     4d12h

==> v1/Service
NAME                                     TYPE          CLUSTER-IP    EXTERNAL-IP     PORT(S)                          AGE
hono-adapter-amqp-vertx                  LoadBalancer  10.0.249.172  40.118.0.228    5672:32672/TCP,5671:32671/TCP    4d12h
hono-adapter-amqp-vertx-headless         ClusterIP     None          <none>          <none>                           4d12h
hono-adapter-http-vertx                  LoadBalancer  10.0.161.61   40.114.139.147  8080:30080/TCP,8443:30443/TCP    4d12h
hono-adapter-http-vertx-headless         ClusterIP     None          <none>          <none>                           4d12h
hono-adapter-mqtt-vertx                  LoadBalancer  10.0.130.249  40.114.223.12   1883:31883/TCP,8883:30883/TCP    4d12h
hono-adapter-mqtt-vertx-headless         ClusterIP     None          <none>          <none>                           4d12h
hono-grafana                             ClusterIP     10.0.197.69   <none>          3000/TCP                         4d12h
hono-prometheus-server                   ClusterIP     10.0.122.135  <none>          9090/TCP                         4d12h
hono-service-auth                        ClusterIP     10.0.59.166   <none>          5671/TCP                         4d12h
hono-service-auth-headless               ClusterIP     None          <none>          <none>                           4d12h
hono-service-device-connection-headless  ClusterIP     None          <none>          <none>                           4d12h
hono-service-device-registry             ClusterIP     10.0.180.214  <none>          5671/TCP,8443/TCP                4d12h
hono-service-device-registry-ext         LoadBalancer  10.0.7.141    40.118.0.165    28080:31080/TCP,28443:31443/TCP  4d12h
hono-service-device-registry-headless    ClusterIP     None          <none>          <none>                           4d12h

==> v1/ServiceAccount
NAME                    SECRETS  AGE
hono-grafana            1        4d12h
hono-grafana-test       1        4d12h
hono-prometheus-server  1        4d12h

==> v1beta1/ClusterRole
NAME                    AGE
hono-prometheus-server  4d12h

==> v1beta1/ClusterRoleBinding
NAME                    AGE
hono-prometheus-server  4d12h

==> v1beta1/Deployment
NAME                     READY  UP-TO-DATE  AVAILABLE  AGE
hono-adapter-amqp-vertx  0/1    1           0          4d12h
hono-adapter-http-vertx  0/1    1           0          4d12h
hono-adapter-mqtt-vertx  0/1    1           0          4d12h
hono-prometheus-server   1/1    1           1          4d12h
hono-service-auth        1/1    1           1          4d12h

==> v1beta1/PodSecurityPolicy
NAME               PRIV   CAPS      SELINUX   RUNASUSER  FSGROUP   SUPGROUP  READONLYROOTFS  VOLUMES
hono-grafana       false  RunAsAny  RunAsAny  RunAsAny   RunAsAny  false     configMap,emptyDir,projected,secret,downwardAPI,persistentVolumeClaim
hono-grafana-test  false  RunAsAny  RunAsAny  RunAsAny   RunAsAny  false     configMap,downwardAPI,emptyDir,projected,secret

==> v1beta1/Role
NAME          AGE
hono-grafana  4d12h

==> v1beta1/RoleBinding
NAME          AGE
hono-grafana  4d12h

==> v1beta1/StatefulSet
NAME                          READY  AGE
hono-service-device-registry  1/1    4d12h

==> v1beta2/Deployment
NAME          READY  UP-TO-DATE  AVAILABLE  AGE
hono-grafana  1/1    1           1          4d12h


NOTES:
Thank you for installing eclipse-hono.

Your release is named hono.

To learn more about the release, try:

  $ helm status hono
  $ helm get hono

